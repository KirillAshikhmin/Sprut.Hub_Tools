{
  "scenarioTemplate": {
    "name": "üå°Ô∏èüíß –°—Ä–µ–¥–Ω—è—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –∏ –≤–ª–∞–∂–Ω–æ—Å—Ç—å –≤ –∫–æ–º–Ω–∞—Ç–µ",
    "desc": "üå°Ô∏èüíß –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –¥–∞—Ç—á–∏–∫–∞ —Å —É—Å—Ä–µ–¥–Ω–µ–Ω–Ω—ã–º–∏ –ø–æ–∫–∞–∑–∞–Ω–∏—è–º–∏\n\nüìä –ß–¢–û –î–ï–õ–ê–ï–¢:\n‚Ä¢ –°–æ–±–∏—Ä–∞–µ—Ç –ø–æ–∫–∞–∑–∞–Ω–∏—è —Å–æ –≤—Å–µ—Ö –¥–∞—Ç—á–∏–∫–æ–≤ –≤ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–æ–º–Ω–∞—Ç–µ, –≤—ã—á–∏—Å–ª—è–µ—Ç —Å—Ä–µ–¥–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –µ–≥–æ –Ω–∞ –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –¥–∞—Ç—á–∏–∫\n‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∞–¥–∞–ø—Ç–∏—Ä—É–µ—Ç—Å—è –∫ —Ç–∏–ø—É –¥–∞—Ç—á–∏–∫–∞ (—Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞/–≤–ª–∞–∂–Ω–æ—Å—Ç—å)\n‚Ä¢ –§–∏–ª—å—Ç—Ä—É–µ—Ç –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ (–æ—Ñ—Ñ–ª–∞–π–Ω —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞, –∑–Ω–∞—á–µ–Ω–∏–µ -100 (—É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ Aqara —Å —Ä–∞–∑—Ä—è–∂–∞—é—â–µ–π—Å—è –±–∞—Ç–∞—Ä–µ–π–∫–æ–π))\n\nüîß –ü–û–î–î–ï–†–ñ–ò–í–ê–ï–ú–´–ï –°–ï–†–í–ò–°–´:\n‚Ä¢ TemperatureSensor (–î–∞—Ç—á–∏–∫ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã)\n‚Ä¢ Thermostat (–¢–µ—Ä–º–æ—Å—Ç–∞—Ç)\n‚Ä¢ HeaterCooler (–û–±–æ–≥—Ä–µ–≤–∞—Ç–µ–ª—å/–æ—Ö–ª–∞–¥–∏—Ç–µ–ª—å)\n‚Ä¢ HumiditySensor (–î–∞—Ç—á–∏–∫ –≤–ª–∞–∂–Ω–æ—Å—Ç–∏)\n‚Ä¢ HumidifierDehumidifier (–£–≤–ª–∞–∂–Ω–∏—Ç–µ–ª—å/–æ—Å—É—à–∏—Ç–µ–ª—å)\n\n‚öíÔ∏è –ü–†–ò–ù–¶–ò–ü –†–ê–ë–û–¢–´:\n–ü—Ä–∏ –∑–∞–ø—É—Å–∫–µ:\n‚Ä¢ –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ–∫–∞–∑–∞–Ω–∏–π –¥–∞—Ç—á–∏–∫–æ–≤\n‚Ä¢ –°–±–æ—Ä, —Ä–∞—Å—á–µ—Ç –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ä–µ–¥–Ω–µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è\n–ü—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ø–æ–∫–∞–∑–∞–Ω–∏–π –¥–∞—Ç—á–∏–∫–æ–≤:\n‚Ä¢ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ä–µ–¥–Ω–µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è —Å —É—á–µ—Ç–æ–º –≥–∏—Å—Ç–µ—Ä–µ–∑–∏—Å–∞ –∏ –ø–æ—Ä–æ–≥–∞ —Ç–æ—á–Ω–æ—Å—Ç–∏ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è —Å–∫–∞—á–∫–æ–≤\n\n–ï–∂–µ—á–∞—Å–Ω–æ:\n‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç–∏ —Å–ø–∏—Å–∫–∞ –¥–∞—Ç—á–∏–∫–æ–≤\n‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤\n‚Ä¢ –£–¥–∞–ª–µ–Ω–∏–µ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö/–ø–µ—Ä–µ–º–µ—â–µ–Ω–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤\n‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ –¥–∞—Ç—á–∏–∫–æ–≤",
    "active": true,
    "onStart": true,
    "sync": false,
    "data": "// –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã\nconst CONSTANTS = {\n    ONE_DAY_MS: 24 * 60 * 60 * 1000, // 24 —á–∞—Å–∞ –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö\n    INVALID_VALUE: -100, // –ù–µ–≤–∞–ª–∏–¥–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –æ—Ç –¥–∞—Ç—á–∏–∫–æ–≤ Aqara\n    HYSTERESIS_FACTOR: 0.75, // –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –≥–∏—Å—Ç–µ—Ä–µ–∑–∏—Å–∞ (75% –æ—Ç –ø–æ—Ä–æ–≥–∞ —Ç–æ—á–Ω–æ—Å—Ç–∏)\n    DEFAULT_PRECISION_THRESHOLD: 0.1, // –ü–æ—Ä–æ–≥ —Ç–æ—á–Ω–æ—Å—Ç–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é\n    MAX_PRECISION_THRESHOLD: 100.0, // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –ø–æ—Ä–æ–≥ —Ç–æ—á–Ω–æ—Å—Ç–∏\n    NOON_HOUR: 12, // –ß–∞—Å –¥–ª—è –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏\n    DEBUG_CRON_SCHEDULE: \"0 * * * * *\", // –ö–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É –ø—Ä–∏ debug\n    DAILY_CRON_SCHEDULE: \"0 12 * * * *\" // –ï–∂–µ–¥–Ω–µ–≤–Ω–æ –≤ –ø–æ–ª–¥–µ–Ω—å\n};\n\n// –í—ã–Ω–æ—Å–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ info –∏ options\nlet scenarioName = {\n    ru: \"üå°Ô∏èüíß –°—Ä–µ–¥–Ω—è—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –∏ –≤–ª–∞–∂–Ω–æ—Å—Ç—å –≤ –∫–æ–º–Ω–∞—Ç–µ\",\n    en: \"üå°Ô∏èüíß Average temperature and humidity in room\"\n};\n\nlet scenarioDescription = {\n    ru: \"üå°Ô∏èüíß –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –¥–∞—Ç—á–∏–∫–∞ —Å —É—Å—Ä–µ–¥–Ω–µ–Ω–Ω—ã–º–∏ –ø–æ–∫–∞–∑–∞–Ω–∏—è–º–∏\\n\\n\" +\n        \"üìä –ß–¢–û –î–ï–õ–ê–ï–¢:\\n\" +\n        \"‚Ä¢ –°–æ–±–∏—Ä–∞–µ—Ç –ø–æ–∫–∞–∑–∞–Ω–∏—è —Å–æ –≤—Å–µ—Ö –¥–∞—Ç—á–∏–∫–æ–≤ –≤ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–æ–º–Ω–∞—Ç–µ, –≤—ã—á–∏—Å–ª—è–µ—Ç —Å—Ä–µ–¥–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –µ–≥–æ –Ω–∞ –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –¥–∞—Ç—á–∏–∫\\n\" +\n        \"‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∞–¥–∞–ø—Ç–∏—Ä—É–µ—Ç—Å—è –∫ —Ç–∏–ø—É –¥–∞—Ç—á–∏–∫–∞ (—Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞/–≤–ª–∞–∂–Ω–æ—Å—Ç—å)\\n\" +\n        \"‚Ä¢ –§–∏–ª—å—Ç—Ä—É–µ—Ç –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ (–æ—Ñ—Ñ–ª–∞–π–Ω —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞, –∑–Ω–∞—á–µ–Ω–∏–µ -100 (—É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ Aqara —Å —Ä–∞–∑—Ä—è–∂–∞—é—â–µ–π—Å—è –±–∞—Ç–∞—Ä–µ–π–∫–æ–π))\\n\\n\" +\n         \"üîß –ü–û–î–î–ï–†–ñ–ò–í–ê–ï–ú–´–ï –°–ï–†–í–ò–°–´:\\n\" +\n         \"‚Ä¢ TemperatureSensor (–î–∞—Ç—á–∏–∫ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã)\\n\" +\n         \"‚Ä¢ Thermostat (–¢–µ—Ä–º–æ—Å—Ç–∞—Ç)\\n\" +\n         \"‚Ä¢ HeaterCooler (–û–±–æ–≥—Ä–µ–≤–∞—Ç–µ–ª—å/–æ—Ö–ª–∞–¥–∏—Ç–µ–ª—å)\\n\" +\n         \"‚Ä¢ HumiditySensor (–î–∞—Ç—á–∏–∫ –≤–ª–∞–∂–Ω–æ—Å—Ç–∏)\\n\" +\n         \"‚Ä¢ HumidifierDehumidifier (–£–≤–ª–∞–∂–Ω–∏—Ç–µ–ª—å/–æ—Å—É—à–∏—Ç–µ–ª—å)\\n\\n\" +\n        \"‚öíÔ∏è –ü–†–ò–ù–¶–ò–ü –†–ê–ë–û–¢–´:\\n\" +\n        \"–ü—Ä–∏ –∑–∞–ø—É—Å–∫–µ:\\n\" +\n        \"‚Ä¢ –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ–∫–∞–∑–∞–Ω–∏–π –¥–∞—Ç—á–∏–∫–æ–≤\\n\" +\n        \"‚Ä¢ –°–±–æ—Ä, —Ä–∞—Å—á–µ—Ç –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ä–µ–¥–Ω–µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è\\n\" +\n        \"–ü—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ø–æ–∫–∞–∑–∞–Ω–∏–π –¥–∞—Ç—á–∏–∫–æ–≤:\\n\" +\n        \"‚Ä¢ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ä–µ–¥–Ω–µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è —Å —É—á–µ—Ç–æ–º –≥–∏—Å—Ç–µ—Ä–µ–∑–∏—Å–∞ –∏ –ø–æ—Ä–æ–≥–∞ —Ç–æ—á–Ω–æ—Å—Ç–∏ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è —Å–∫–∞—á–∫–æ–≤\\n\\n\" +\n        \"–ï–∂–µ—á–∞—Å–Ω–æ:\\n\" +\n        \"‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç–∏ —Å–ø–∏—Å–∫–∞ –¥–∞—Ç—á–∏–∫–æ–≤\\n\" +\n        \"‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤\\n\" +\n        \"‚Ä¢ –£–¥–∞–ª–µ–Ω–∏–µ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö/–ø–µ—Ä–µ–º–µ—â–µ–Ω–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤\\n\" +\n        \"‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ –¥–∞—Ç—á–∏–∫–æ–≤\",\n     en: \"üå°Ô∏èüíß Universal scenario for creating a virtual sensor with averaged readings\\n\\n\" +\n         \"üìä WHAT IT DOES:\\n\" +\n         \"‚Ä¢ Collects readings from all sensors in the selected room, calculates average value and sets it to the virtual sensor\\n\" +\n         \"‚Ä¢ Automatically adapts to sensor type (temperature/humidity)\\n\" +\n         \"‚Ä¢ Filters invalid data (offline devices, -100 value (Aqara devices with low battery))\\n\\n\" +\n         \"üîß SUPPORTED SERVICES:\\n\" +\n         \"‚Ä¢ TemperatureSensor (Temperature sensor)\\n\" +\n         \"‚Ä¢ Thermostat (Thermostat)\\n\" +\n         \"‚Ä¢ HeaterCooler (Heater/cooler)\\n\" +\n         \"‚Ä¢ HumiditySensor (Humidity sensor)\\n\" +\n         \"‚Ä¢ HumidifierDehumidifier (Humidifier/dehumidifier)\\n\\n\" +\n         \"‚öíÔ∏è WORK PRINCIPLE:\\n\" +\n         \"On startup:\\n\" +\n         \"‚Ä¢ Subscription to sensor reading changes\\n\" +\n         \"‚Ä¢ Collection, calculation and setting of average value\\n\" +\n         \"On sensor reading changes:\\n\" +\n         \"‚Ä¢ Updating average value with hysteresis and precision threshold to prevent jumps\\n\\n\" +\n         \"Hourly:\\n\" +\n         \"‚Ä¢ Checking sensor list relevance\\n\" +\n         \"‚Ä¢ Automatic addition of new devices\\n\" +\n         \"‚Ä¢ Removal of non-existent/moved devices\\n\" +\n         \"‚Ä¢ Checking sensor health\"\n};\n\ninfo = {\n    name: scenarioName.ru,\n    description: scenarioDescription.ru,\n    version: \"1.0\",\n    author: \"@BOOMikru\",\n    onStart: true,\n\n    sourceServices: [HS.TemperatureSensor, HS.HumiditySensor],\n    sourceCharacteristics: [HC.CurrentTemperature, HC.CurrentRelativeHumidity],\n\n    options: {\n        important: {\n            name: {\n                en: \"‚ö†Ô∏è IMPORTANT\",\n                ru: \"‚ö†Ô∏è –í–ê–ñ–ù–û\"\n            },\n            desc: {\n                ru: \"–ê–∫—Ç–∏–≤–∏—Ä—É–π—Ç–µ —Å—Ü–µ–Ω–∞—Ä–∏–π –¢–û–õ–¨–ö–û –Ω–∞ –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã—Ö –¥–∞—Ç—á–∏–∫–∞—Ö —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã –∏–ª–∏ –≤–ª–∞–∂–Ω–æ—Å—Ç–∏!\\n\\n\" +\n                    \"–î–∞–Ω–Ω–∞—è –ª–æ–≥–∏–∫–∞ –ø–æ–ª—É—á–∞–µ—Ç –ø–æ–∫–∞–∑–∞–Ω–∏—è —Å –¥–∞—Ç—á–∏–∫–æ–≤ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã –∏–ª–∏ –≤–ª–∞–∂–Ω–æ—Å—Ç–∏ –≤ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–æ–º–Ω–∞—Ç–µ –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å—Ä–µ–¥–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤—É, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º –≤–∫–ª—é—á–µ–Ω–∞ –ª–æ–≥–∏–∫–∞.\\n\\n\" +\n                    \"–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–Ω–∞—Ç—É, \" +\n                    \"–Ω–∞—Å—Ç—Ä–æ–π—Ç–µ —Ç–æ—á–Ω–æ—Å—Ç—å –∏ —Å–ø–∏—Å–æ–∫ –∏—Å–∫–ª—é—á–µ–Ω–∏–π –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö, –∞ –∑–∞—Ç–µ–º –∞–∫—Ç–∏–≤–∏—Ä—É–π—Ç–µ —Å—Ü–µ–Ω–∞—Ä–∏–π –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª–µ–º '–ê–∫—Ç–∏–≤–Ω–æ'.\",\n                en: \"Activate the scenario ONLY on virtual temperature or humidity sensors.\\n\\n\" +\n                    \"This logic receives readings from temperature or humidity sensors in the selected room and sets the average value to the device on which the logic is enabled.\\n\\n\" +\n                    \"First select the room \" +\n                    \"and set the precision and excluded devices list in settings, then activate the scenario with the 'Active' switch.\"\n            },\n            type: \"String\",\n            value: \"\",\n            formType: \"status\"\n        },\n        roomName: {\n            name: {\n                ru: \"üè† –ö–æ–º–Ω–∞—Ç–∞\",\n                en: \"üè† Room\"\n            },\n            type: \"String\",\n            value: \"\",\n            formType: \"list\",\n            values: getRoomsList(),\n            desc: {\n                ru: \"–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–Ω–∞—Ç—É, –∏–∑ –∫–æ—Ç–æ—Ä–æ–π –±—É–¥—É—Ç –±—Ä–∞—Ç—å—Å—è –ø–æ–∫–∞–∑–∞–Ω–∏—è –¥–∞—Ç—á–∏–∫–æ–≤ –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ —Å—Ä–µ–¥–Ω–µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è.\\n\" +\n                    \"–ö–æ–º–Ω–∞—Ç–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ - –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–æ–º–Ω–∞—Ç–∞ –≤ –∫–æ—Ç–æ—Ä–æ–π —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º –≤–∫–ª—é—á–µ–Ω–∞ –ª–æ–≥–∏–∫–∞.\",\n                en: \"Select room for averaging readings.\\n\" +\n                    \"Device room - uses room where the device is located, on which the logic is enabled.\"\n            }\n        },\n        precisionThreshold: {\n            name: {\n                ru: \"üìè –¢–æ—á–Ω–æ—Å—Ç—å\",\n                en: \"üìè Precision\"\n            },\n            type: \"Double\",\n            value: CONSTANTS.DEFAULT_PRECISION_THRESHOLD,\n            minValue: 0.0,\n            maxValue: CONSTANTS.MAX_PRECISION_THRESHOLD,\n            step: 0.01,\n            desc: {\n                ru: \"–ö–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ—Ç, –∫–∞–∫ —á–∞—Å—Ç–æ –±—É–¥–µ—Ç –æ–±–Ω–æ–≤–ª—è—Ç—å—Å—è —Å—Ä–µ–¥–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.\\n\\n\" +\n                    \"üìä –ù–∞–ø—Ä–∏–º–µ—Ä –ø—Ä–∏ –∑–Ω–∞—á–µ–Ω–∏–∏ 0.5, –∑–Ω–∞—á–µ–Ω–∏–µ —É –¥–∞—Ç—á–∏–∫–∞ –±—É–¥–µ—Ç –∫—Ä–∞—Ç–Ω–æ 0.5 (21.5, 22.0, 22.5 –∏ —Ç.–¥.)\\n\\n\" +\n                    \"üí° –ó–∞—á–µ–º –Ω—É–∂–Ω–æ:\\n\" +\n                    \"‚Ä¢ –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç —á–∞—Å—Ç—ã–µ —Å–∫–∞—á–∫–∏ –ø–æ–∫–∞–∑–∞–Ω–∏–π\\n\" +\n                    \"‚Ä¢ –£–º–µ–Ω—å—à–∞–µ—Ç –∑–∞–ø–∏—Å–∏ –≤ –∏—Å—Ç–æ—Ä–∏—é\\n\",\n                en: \"Controls how often the average value will be updated.\\n\\n\" +\n                    \"üìä For example, at a value of 0.5, the value of the sensor will be a multiple of 0.5 (21.5, 22.0, 22.5, etc.)\\n\\n\" +\n                    \"üí° Why needed:\\n\" +\n                    \"‚Ä¢ Prevents frequent value jumps\\n\" +\n                    \"‚Ä¢ Decreases history records\\n\"\n            }\n        },\n        excludedDevices: {\n            name: {\n                ru: \"üö´ –ò—Å–∫–ª—é—á–∏—Ç—å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞\",\n                en: \"üö´ Exclude devices\"\n            },\n            type: \"String\",\n            value: \"\",\n            desc: {\n                ru: \"–£—Å—Ç—Ä–æ–π—Å—Ç–≤–∞, –∫–æ—Ç–æ—Ä—ã–µ –ù–ï –±—É–¥—É—Ç —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ —Ä–∞—Å—á–µ—Ç–µ —Å—Ä–µ–¥–Ω–µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è.\\n\" +\n                    \"–§–æ—Ä–º–∞—Ç—ã: ID –∞–∫—Å–µ—Å—Å—É–∞—Ä–∞ –∏–ª–∏ ID –∞–∫—Å–µ—Å—Å—É–∞—Ä–∞.ID —Å–µ—Ä–≤–∏—Å–∞ \" +\n                    \"(15, 133.17, 42, 25.13)\",\n                en: \"Devices that will NOT participate in calculating the average value.\\n\" +\n                    \"Formats: accessory ID or accessory ID.service ID \" +\n                    \"(15.13, 133.17, 42, 25.13)\"\n            }\n        },\n        desc: {\n            name: {\n                en: \"‚ÑπÔ∏è DESCRIPTION\",\n                ru: \"‚ÑπÔ∏è –û–ü–ò–°–ê–ù–ò–ï\"\n            },\n            desc: scenarioDescription,\n            type: \"String\",\n            value: \"\",\n            formType: \"status\"\n        },\n        debug: {\n            name: {\n                ru: \"üîß –†–µ–∂–∏–º –æ—Ç–ª–∞–¥–∫–∏\",\n                en: \"üîß Debug mode\"\n            },\n            type: \"Boolean\",\n            value: false,\n            desc: {\n                ru: \"–í–∫–ª—é—á–∏—Ç—å –æ—Ç–ª–∞–¥–æ—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∫–æ–Ω—Å–æ–ª—å (–Ω–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –≤–∫–ª—é—á–∞—Ç—å –¥–ª—è –ø–æ–≤—Å–µ–¥–Ω–µ–≤–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è)\",\n                en: \"Enable debug messages in console (not recommended to enable for daily use)\"\n            }\n        }\n    },\n\n    variables: {\n        initialized: false,\n        roomName: \"\",\n        characteristicType: null,\n        devicesData: {}, // –•—Ä–∞–Ω–∏—Ç –¥–∞–Ω–Ω—ã–µ –ø–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞–º: {deviceId: {value, online, lastUpdate}}\n        lastAverageValue: null,\n        currentRoom: \"\", // –¢–µ–∫—É—â–∞—è –∫–æ–º–Ω–∞—Ç–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞\n        noonTask: null // Cron –∑–∞–¥–∞—á–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π\n    }\n};\n\nfunction trigger(source, value, variables, options, context) {\n    try {\n        const service = source.getService();\n        const accessory = service.getAccessory();\n        const characteristicType = source.getType();\n        const currentRoom = accessory.getRoom().getName();\n\n        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ–º–Ω–∞—Ç—É\n        let targetRoomName = options.roomName;\n        if (!targetRoomName || targetRoomName === \"\") {\n            targetRoomName = currentRoom;\n        }\n\n        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–∑–º–µ–Ω–∏–ª–∞—Å—å –ª–∏ –∫–æ–º–Ω–∞—Ç–∞ –∏–ª–∏ —ç—Ç–æ –ø–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫\n        const roomChanged = variables.currentRoom !== currentRoom;\n        const firstRun = !variables.initialized;\n\n        if (roomChanged || firstRun) {\n            // –í–∞–ª–∏–¥–∏—Ä—É–µ–º –æ–ø—Ü–∏–∏\n            validateOptions(options);\n\n            // –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏ —Å–º–µ–Ω–µ –∫–æ–º–Ω–∞—Ç—ã\n            if (roomChanged && variables.initialized) {\n                if (options.debug) {\n                    console.info(`–ö–æ–º–Ω–∞—Ç–∞ –∏–∑–º–µ–Ω–∏–ª–∞—Å—å —Å \"${variables.currentRoom}\" –Ω–∞ \"${currentRoom}\". –ü–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è...`);\n                }\n                clearVariables(variables);\n            }\n\n            // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ (—Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –∏–ª–∏ –≤–ª–∞–∂–Ω–æ—Å—Ç—å)\n            variables.characteristicType = characteristicType;\n            variables.roomName = targetRoomName;\n            variables.currentRoom = currentRoom;\n            variables.currentServiceId = source.getService().getUUID();\n\n            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –∫–æ–º–Ω–∞—Ç—ã\n            const rooms = Hub.getRooms();\n            let targetRoom = null;\n\n            // –ò—â–µ–º –∫–æ–º–Ω–∞—Ç—É –ø–æ –∏–º–µ–Ω–∏\n            for (let i = 0; i < rooms.length; i++) {\n                if (rooms[i].getName() === targetRoomName) {\n                    targetRoom = rooms[i];\n                    break;\n                }\n            }\n\n            if (!targetRoom) {\n                console.error(`–ö–æ–º–Ω–∞—Ç–∞ \"${targetRoomName}\" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!`);\n                return;\n            }\n\n            if (options.debug) {\n                console.info(`–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —É—Å—Ä–µ–¥–Ω–µ–Ω–∏—è ${getCharacteristicName(characteristicType)} –¥–ª—è –∫–æ–º–Ω–∞—Ç—ã: ${targetRoomName}`);\n            }\n\n            // –°–æ–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ –≤—Å–µ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞–º –≤ –∫–æ–º–Ω–∞—Ç–µ\n            collectDevicesData(targetRoom, characteristicType, variables, options, source);\n\n            // –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫\n            subscribeToChanges(characteristicType, variables, source, options);\n\n            // –í—ã—á–∏—Å–ª—è–µ–º –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ä–µ–¥–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ\n            calculateAndSetAverage(source, variables, options);\n\n            // –°–æ–∑–¥–∞–µ–º cron –∑–∞–¥–∞—á—É –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –¥–∞—Ç—á–∏–∫–æ–≤\n            if (!variables.noonTask) {\n                // –ï–∂–µ–¥–Ω–µ–≤–Ω–æ –≤ –ø–æ–ª–¥–µ–Ω—å, –µ—Å–ª–∏ debug –≤–∫–ª—é—á–µ–Ω - –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É\n                const cronSchedule = options.debug ? CONSTANTS.DEBUG_CRON_SCHEDULE : CONSTANTS.DAILY_CRON_SCHEDULE;\n                variables.noonTask = Cron.schedule(cronSchedule, function () {\n                    checkSensorsUpdates(variables, options);\n                });\n            }\n\n            variables.initialized = true;\n        }\n\n    } catch (e) {\n        console.error(`–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å—Ü–µ–Ω–∞—Ä–∏—è: ${e.message}`);\n    }\n}\n\nfunction clearVariables(variables) {\n    // –û—á–∏—â–∞–µ–º cron –∑–∞–¥–∞—á—É\n    if (variables.noonTask) {\n        variables.noonTask.clear();\n        variables.noonTask = null;\n    }\n\n    variables.initialized = false;\n    variables.roomName = \"\";\n    variables.characteristicType = null;\n    variables.devicesData = {};\n    variables.lastAverageValue = null;\n    variables.currentRoom = \"\";\n    variables.currentServiceId = null;\n}\n\nfunction isValidData(value, online) {\n    return online && value !== CONSTANTS.INVALID_VALUE && value !== null && value !== undefined;\n}\n\nfunction parseExcludedDevices(excludedDevicesString) {\n    const excluded = {\n        accessories: [], // ID –∞–∫—Å–µ—Å—Å—É–∞—Ä–æ–≤\n        services: []     // ID –∞–∫—Å–µ—Å—Å—É–∞—Ä.—Å–µ—Ä–≤–∏—Å\n    };\n\n    if (!excludedDevicesString || excludedDevicesString.trim() === \"\") {\n        return excluded;\n    }\n\n    const devices = excludedDevicesString.split(',');\n\n    for (let i = 0; i < devices.length; i++) {\n        const device = devices[i].trim();\n        if (device.length > 0) {\n            if (device.indexOf('.') >= 0) {\n                // –§–æ—Ä–º–∞—Ç: –∞–∫—Å–µ—Å—Å—É–∞—Ä.—Å–µ—Ä–≤–∏—Å\n                excluded.services.push(device);\n            } else {\n                // –§–æ—Ä–º–∞—Ç: –∞–∫—Å–µ—Å—Å—É–∞—Ä\n                excluded.accessories.push(device);\n            }\n        }\n    }\n\n    return excluded;\n}\n\nfunction isDeviceExcluded(accessoryId, serviceId, excludedDevices) {\n    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –ø–æ ID –∞–∫—Å–µ—Å—Å—É–∞—Ä–∞\n    if (excludedDevices.accessories.indexOf(accessoryId.toString()) >= 0) {\n        return true;\n    }\n\n    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –ø–æ ID –∞–∫—Å–µ—Å—Å—É–∞—Ä.—Å–µ—Ä–≤–∏—Å\n    const serviceKey = accessoryId + '.' + serviceId;\n    if (excludedDevices.services.indexOf(serviceKey) >= 0) {\n        return true;\n    }\n\n    return false;\n}\n\nfunction collectDevicesData(room, characteristicType, variables, options, source, onlyNew = false) {\n    try {\n        const roomAccessories = room.getAccessories();\n        if (!onlyNew) {\n            variables.devicesData = {};\n        }\n        const excludedDevices = parseExcludedDevices(options.excludedDevices);\n        let newDevices = [];\n\n        roomAccessories.forEach(accessory => {\n            // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–µ–∫—É—â–µ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ (—Ç–æ, –∫ –∫–æ—Ç–æ—Ä–æ–º—É –ø—Ä–∏–≤—è–∑–∞–Ω —Å—Ü–µ–Ω–∞—Ä–∏–π)\n            if (source && accessory.getUUID() === source.getAccessory().getUUID()) {\n                return;\n            }\n\n            // –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –≤—Å–µ–º —Å–µ—Ä–≤–∏—Å–∞–º –∞–∫—Å–µ—Å—Å—É–∞—Ä–∞ –≤ –ø–æ–∏—Å–∫–∞—Ö –Ω—É–∂–Ω–æ–π —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏\n            const services = accessory.getServices();\n            services.forEach(service => {\n                const characteristic = service.getCharacteristic(characteristicType);\n                if (characteristic) {\n                    // –ò—Å–ø–æ–ª—å–∑—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–ª—é—á: service.getUUID() —É–∂–µ —Å–æ–¥–µ—Ä–∂–∏—Ç \"AccessoryId.ServiceId\"\n                    const deviceKey = service.getUUID();\n\n                    // –ï—Å–ª–∏ –∏—â–µ–º —Ç–æ–ª—å–∫–æ –Ω–æ–≤—ã–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ\n                    if (onlyNew && variables.devicesData[deviceKey]) {\n                        return;\n                    }\n\n                    // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–µ–∫—É—â–∏–π —Å–µ—Ä–≤–∏—Å (—Ç–æ—Ç, –∫ –∫–æ—Ç–æ—Ä–æ–º—É –ø—Ä–∏–≤—è–∑–∞–Ω —Å—Ü–µ–Ω–∞—Ä–∏–π)\n                    if (variables.currentServiceId && deviceKey === variables.currentServiceId) {\n                        return;\n                    }\n\n                    const onlineStatus = accessory.getService(HS.AccessoryInformation).getCharacteristic(HC.C_Online).getValue();\n                    const currentValue = characteristic.getValue();\n\n                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏—Å–∫–ª—é—á–µ–Ω–æ –ª–∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ\n                    const isExcluded = isDeviceExcluded(accessory.getUUID(), service.getUUID(), excludedDevices);\n\n                    variables.devicesData[deviceKey] = {\n                        value: currentValue,\n                        online: onlineStatus,\n                        lastUpdate: Date.now(),\n                        service: service,\n                        excluded: isExcluded,\n                        accessoryId: accessory.getUUID(),\n                        serviceId: service.getUUID().split('.')[1], // –ë–µ—Ä–µ–º —Ç–æ–ª—å–∫–æ ServiceId –±–µ–∑ AccessoryId\n                        deviceName: accessory.getName(),\n                        serviceName: service.getName()\n                    };\n\n                    if (onlyNew) {\n                        newDevices.push(`${accessory.getName()}(${service.getName()})`);\n                    }\n\n                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö –∏ –≤—ã–≤–æ–¥–∏–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è —Ç–æ–ª—å–∫–æ –¥–ª—è –Ω–µ–∏—Å–∫–ª—é—á–µ–Ω–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤\n                    if (!isValidData(currentValue, onlineStatus) && !isExcluded) {\n                        if (options.debug) {\n                            if (!onlineStatus) {\n                                console.warn(`–£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ ${accessory.getName()} –Ω–µ –≤ —Å–µ—Ç–∏`);\n                            }\n                            if (currentValue === CONSTANTS.INVALID_VALUE) {\n                                console.warn(`–£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ ${accessory.getName()} –ø–µ—Ä–µ–¥–∞–µ—Ç –Ω–µ–≤–∞–ª–∏–¥–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: ${CONSTANTS.INVALID_VALUE}`);\n                            }\n                        }\n                    }\n\n                    if (isExcluded && options.debug) {\n                        console.info(`–£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ ${accessory.getName()} (${service.getName()}) –∏—Å–∫–ª—é—á–µ–Ω–æ –∏–∑ —Ä–∞—Å—á–µ—Ç–∞`);\n                    }\n                }\n            });\n        });\n\n        return onlyNew ? newDevices : undefined;\n    } catch (e) {\n        console.error(`–û—à–∏–±–∫–∞ –≤ collectDevicesData: ${e.message}`);\n        return onlyNew ? [] : undefined;\n    }\n}\n\nfunction subscribeToChanges(characteristicType, variables, source, options) {\n    // –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–π —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏\n    // –í—ã–±–∏—Ä–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏\n    let serviceTypes = [];\n    if (characteristicType === HC.CurrentTemperature) {\n        serviceTypes = [HS.TemperatureSensor, HS.Thermostat, HS.HeaterCooler];\n    } else if (characteristicType === HC.CurrentRelativeHumidity) {\n        serviceTypes = [HS.HumiditySensor, HS.Thermostat, HS.HumidifierDehumidifier];\n    }\n    const characteristics = [characteristicType];\n\n    Hub.subscribeWithCondition(\"\", \"\", serviceTypes, characteristics, function (sensorSource, sensorValue) {\n        try {\n            const service = sensorSource.getService();\n            if (!service) return;\n\n            const accessory = service.getAccessory();\n            if (!accessory) return;\n\n            const deviceKey = service.getUUID();\n\n            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –∏–∑ –Ω–∞—à–µ–π –∫–æ–º–Ω–∞—Ç—ã\n            if (variables.devicesData[deviceKey]) {\n                const infoService = accessory.getService(HS.AccessoryInformation);\n                if (!infoService) return;\n\n                const onlineCharacteristic = infoService.getCharacteristic(HC.C_Online);\n                if (!onlineCharacteristic) return;\n\n                const onlineStatus = onlineCharacteristic.getValue();\n\n                // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞\n                variables.devicesData[deviceKey].value = sensorValue;\n                variables.devicesData[deviceKey].online = onlineStatus;\n                variables.devicesData[deviceKey].lastUpdate = Date.now();\n\n                // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö –∏ –≤—ã–≤–æ–¥–∏–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è —Ç–æ–ª—å–∫–æ –¥–ª—è –Ω–µ–∏—Å–∫–ª—é—á–µ–Ω–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤\n                if (!isValidData(sensorValue, onlineStatus) && !variables.devicesData[deviceKey].excluded) {\n                    if (options.debug) {\n                        if (!onlineStatus) {\n                            console.warn(`–£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ ${accessory.getName()} –Ω–µ –≤ —Å–µ—Ç–∏`);\n                        }\n                        if (sensorValue === CONSTANTS.INVALID_VALUE) {\n                            console.warn(`–£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ ${accessory.getName()} –ø–µ—Ä–µ–¥–∞–µ—Ç –Ω–µ–≤–∞–ª–∏–¥–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: ${CONSTANTS.INVALID_VALUE}`);\n                        }\n                    }\n                }\n\n                // –ü–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞–µ–º —Å—Ä–µ–¥–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –Ω–µ –∏—Å–∫–ª—é—á–µ–Ω–æ\n                if (!variables.devicesData[deviceKey].excluded) {\n                    calculateAndSetAverage(source, variables, options);\n                }\n            }\n        } catch (e) {\n            console.error(`–û—à–∏–±–∫–∞ –≤ –ø–æ–¥–ø–∏—Å–∫–µ –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è: ${e.message}`);\n        }\n    });\n}\n\nfunction calculateAndSetAverage(source, variables, options) {\n    try {\n        let validValues = [];\n        let totalValue = 0;\n        let validCount = 0;\n        let deviceDetails = []; // –î–µ—Ç–∞–ª–∏ –æ–± —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö –¥–ª—è –æ—Ç—á–µ—Ç–∞\n\n        // –°–æ–±–∏—Ä–∞–µ–º –≤–∞–ª–∏–¥–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è (–∏—Å–∫–ª—é—á–∞–µ–º –∏—Å–∫–ª—é—á–µ–Ω–Ω—ã–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞)\n        const deviceKeys = Object.keys(variables.devicesData);\n        for (let i = 0; i < deviceKeys.length; i++) {\n            const deviceKey = deviceKeys[i];\n            const deviceData = variables.devicesData[deviceKey];\n\n            // –£—á–∏—Ç—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –≤–∞–ª–∏–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏ –Ω–µ –∏—Å–∫–ª—é—á–µ–Ω–Ω—ã–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞\n            if (isValidData(deviceData.value, deviceData.online) && !deviceData.excluded) {\n                validValues.push(deviceData.value);\n                totalValue += deviceData.value;\n                validCount++;\n\n                // –ò—Å–ø–æ–ª—å–∑—É–µ–º —É–∂–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ deviceData\n                deviceDetails.push({\n                    name: deviceData.deviceName,\n                    serviceName: deviceData.serviceName,\n                    accessoryId: deviceData.accessoryId,\n                    value: deviceData.value\n                });\n            }\n        }\n\n        if (validCount > 0) {\n            const averageValue = totalValue / validCount;\n\n            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ NaN –∏ Infinity\n            if (isNaN(averageValue) || !isFinite(averageValue)) {\n                console.error(`–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —Å—Ä–µ–¥–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: ${averageValue}. –î–∞–Ω–Ω—ã–µ: ${JSON.stringify(validValues)}`);\n                return;\n            }\n            const precisionThreshold = options.precisionThreshold || CONSTANTS.DEFAULT_PRECISION_THRESHOLD;\n\n            // –û–∫—Ä—É–≥–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –¥–æ –∫—Ä–∞—Ç–Ω–æ–≥–æ precisionThreshold\n            let roundedValue = averageValue;\n            if (precisionThreshold > 0) {\n                roundedValue = Math.round(averageValue / precisionThreshold) * precisionThreshold;\n            }\n\n            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø—Ä–µ–≤—ã—à–∞–µ—Ç –ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –ø–æ—Ä–æ–≥ —Ç–æ—á–Ω–æ—Å—Ç–∏ —Å —É—á–µ—Ç–æ–º –≥–∏—Å—Ç–µ—Ä–µ–∑–∏—Å–∞\n            const lastValue = variables.lastAverageValue || 0;\n\n            // –ì–∏—Å—Ç–µ—Ä–µ–∑–∏—Å: \"–º–µ—Ä—Ç–≤–∞—è –∑–æ–Ω–∞\" –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è —Å–∫–∞—á–∫–æ–≤ —Ç—É–¥–∞-—Å—é–¥–∞\n            let valueChanged = false;\n\n            // –ú–µ—Ä—Ç–≤–∞—è –∑–æ–Ω–∞: 75% –æ—Ç –ø–æ—Ä–æ–≥–∞ —Ç–æ—á–Ω–æ—Å—Ç–∏ –≤–æ–∫—Ä—É–≥ —Ç–µ–∫—É—â–µ–≥–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è\n            const hysteresisZone = precisionThreshold * CONSTANTS.HYSTERESIS_FACTOR;\n            const lowerBound = lastValue - hysteresisZone;\n            const upperBound = lastValue + hysteresisZone;\n\n            if (lastValue === 0) {\n                // –ü–µ—Ä–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤—Å–µ–≥–¥–∞ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º\n                valueChanged = true;\n            } else {\n                // –ó–Ω–∞—á–µ–Ω–∏–µ –º–µ–Ω—è–µ—Ç—Å—è, –µ—Å–ª–∏ –æ–∫—Ä—É–≥–ª–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤—ã—à–ª–æ –∑–∞ –≥—Ä–∞–Ω–∏—Ü—ã \"–º–µ—Ä—Ç–≤–æ–π –∑–æ–Ω—ã\" –≤–æ–∫—Ä—É–≥ —Ç–µ–∫—É—â–µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è\n                if (averageValue < lowerBound || averageValue > upperBound) {\n                    valueChanged = true;\n                }\n            }\n\n            const charName = getCharacteristicName(variables.characteristicType);\n            const deviceList = deviceDetails.map(d => `${d.name} (${d.serviceName}, ${d.accessoryId}): ${d.value.toFixed(2)}`).join(' | ');\n\n            if (valueChanged) {\n                source.setValue(roundedValue);\n                variables.lastAverageValue = roundedValue;\n                if (options.debug) {\n                    console.info(`–£–°–¢–ê–ù–û–í–õ–ï–ù–ê. –°—Ä–µ–¥–Ω—è—è ${charName}: ${roundedValue.toFixed(2)} (—Ç–æ—á–Ω–æ–µ: ${averageValue.toFixed(2)}) –≤ –∫–æ–º–Ω–∞—Ç–µ \"${variables.roomName}\" - –≤—ã—à–ª–æ –∏–∑ –º–µ—Ä—Ç–≤–æ–π –∑–æ–Ω—ã [${lowerBound.toFixed(2)}-${upperBound.toFixed(2)}] –≤–æ–∫—Ä—É–≥ ${lastValue.toFixed(2)} (–∏–∑ ${validCount} —É—Å—Ç—Ä–æ–π—Å—Ç–≤: ${deviceList})`);\n                }\n            } else {\n                if (options.debug) {\n                    console.info(`–ü–†–û–ü–£–°–ö. –°—Ä–µ–¥–Ω—è—è ${charName}: ${roundedValue.toFixed(2)} (—Ç–æ—á–Ω–æ–µ: ${averageValue.toFixed(2)}) –≤ –∫–æ–º–Ω–∞—Ç–µ \"${variables.roomName}\" - –≤ –º–µ—Ä—Ç–≤–æ–π –∑–æ–Ω–µ [${lowerBound.toFixed(2)}-${upperBound.toFixed(2)}] –≤–æ–∫—Ä—É–≥ ${lastValue.toFixed(2)} (–∏–∑ ${validCount} —É—Å—Ç—Ä–æ–π—Å—Ç–≤: ${deviceList})`);\n                }\n            }\n        } else {\n            console.warn(`–ù–µ—Ç –≤–∞–ª–∏–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ —Å—Ä–µ–¥–Ω–µ–π ${getCharacteristicName(variables.characteristicType)} –≤ –∫–æ–º–Ω–∞—Ç–µ \"${variables.roomName}\"`);\n        }\n    } catch (e) {\n        console.error(`–û—à–∏–±–∫–∞ –≤ calculateAndSetAverage: ${e.message}`);\n    }\n}\n\nfunction getCharacteristicName(characteristicType) {\n    if (characteristicType === HC.CurrentTemperature) {\n        return \"—Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã\";\n    } else if (characteristicType === HC.CurrentRelativeHumidity) {\n        return \"–≤–ª–∞–∂–Ω–æ—Å—Ç–∏\";\n    }\n    return \"?\";\n}\n\nfunction checkSensorsUpdates(variables, options) {\n    try {\n        const oneDayMs = CONSTANTS.ONE_DAY_MS;\n        const currentTime = Date.now();\n        let hasRecentUpdates = false;\n        let offlineDevices = [];\n        let invalidDataDevices = [];\n        let removedDevices = [];\n\n        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–æ–ª–¥–µ–Ω—å –ª–∏ —Å–µ–π—á–∞—Å (–¥–ª—è –≤—ã–≤–æ–¥–∞ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π)\n        const now = new Date();\n        const isNoon = now.getHours() === CONSTANTS.NOON_HOUR && now.getMinutes() === 0;\n        const shouldShowWarnings = options.debug || isNoon;\n\n        const deviceKeys = Object.keys(variables.devicesData);\n        for (let i = 0; i < deviceKeys.length; i++) {\n            const deviceKey = deviceKeys[i];\n            try {\n                const deviceData = variables.devicesData[deviceKey];\n                if (!deviceData) return;\n\n                const timeSinceUpdate = currentTime - deviceData.lastUpdate;\n\n                // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –∏ —Å–µ—Ä–≤–∏—Å–∞ –≤ —Ö–∞–±–µ\n                const accessory = Hub.getAccessory(deviceData.accessoryId);\n                if (!accessory) {\n                    const deviceName = deviceData.deviceName || deviceData.accessoryId;\n                    removedDevices.push(`–£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ ${deviceName} (—É–¥–∞–ª–µ–Ω–æ –∏–∑ —Ö–∞–±–∞)`);\n                    delete variables.devicesData[deviceKey];\n                    return;\n                }\n\n                const service = accessory.getService(deviceData.serviceId);\n                if (!service) {\n                    const deviceName = deviceData.deviceName || deviceData.accessoryId;\n                    removedDevices.push(`–°–µ—Ä–≤–∏—Å ${deviceName}.${deviceData.serviceId} (—É–¥–∞–ª–µ–Ω –∏–∑ —Ö–∞–±–∞)`);\n                    delete variables.devicesData[deviceKey];\n                    return;\n                }\n\n                // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –≤—Å–µ –µ—â–µ –≤ —Ç–æ–π –∂–µ –∫–æ–º–Ω–∞—Ç–µ\n                const deviceRoom = accessory.getRoom();\n                if (!deviceRoom || deviceRoom.getName() !== variables.roomName) {\n                    const deviceName = deviceData.deviceName || accessory.getName();\n                    removedDevices.push(`–£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ ${deviceName} (–ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–æ –≤ –¥—Ä—É–≥—É—é –∫–æ–º–Ω–∞—Ç—É: ${deviceRoom ? deviceRoom.getName() : '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'})`);\n                    delete variables.devicesData[deviceKey];\n                    return;\n                }\n\n                if (timeSinceUpdate < oneDayMs) {\n                    hasRecentUpdates = true;\n                }\n\n                // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —É—Å—Ç—Ä–æ–π—Å—Ç–≤ –∏ –≤—ã–≤–æ–¥–∏–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è —Ç–æ–ª—å–∫–æ –¥–ª—è –Ω–µ–∏—Å–∫–ª—é—á–µ–Ω–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤\n                if (!deviceData.excluded) {\n                    if (!deviceData.online) {\n                        offlineDevices.push(deviceData.deviceName || deviceData.accessoryId);\n                    }\n                    if (deviceData.value === CONSTANTS.INVALID_VALUE) {\n                        invalidDataDevices.push(deviceData.deviceName || deviceData.accessoryId);\n                    }\n                }\n            } catch (e) {\n                // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞\n                if (options.debug) {\n                    console.warn(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ ${deviceKey}: ${e.message}`);\n                }\n                // –£–¥–∞–ª—è–µ–º –ø—Ä–æ–±–ª–µ–º–Ω–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –∏–∑ –¥–∞–Ω–Ω—ã—Ö\n                delete variables.devicesData[deviceKey];\n            }\n        }\n\n        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –ø–æ—è–≤–∏–ª–∏—Å—å –ª–∏ –Ω–æ–≤—ã–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –≤ –∫–æ–º–Ω–∞—Ç–µ\n        let currentRoom = null;\n        const rooms = Hub.getRooms();\n        for (let i = 0; i < rooms.length; i++) {\n            if (rooms[i].getName() === variables.roomName) {\n                currentRoom = rooms[i];\n                break;\n            }\n        }\n\n        if (currentRoom) {\n            const newDevices = collectDevicesData(currentRoom, variables.characteristicType, variables, options, null, true);\n            if (newDevices.length > 0) {\n                console.info(`–ù–æ–≤—ã–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ —Ä–∞—Å—á–µ—Ç —Å—Ä–µ–¥–Ω–∏—Ö –∑–Ω–∞—á–µ–Ω–∏–π: ${newDevices.join(', ')}`);\n            }\n        }\n\n        // –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± —É–¥–∞–ª–µ–Ω–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö\n        if (removedDevices.length > 0) {\n            console.info(`–£—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –±–æ–ª—å—à–µ –Ω–µ —É—á–∞—Å—Ç–≤—É—é—Ç –≤ —Ä–∞—Å—á–µ—Ç–µ —Å—Ä–µ–¥–Ω–∏—Ö –∑–Ω–∞—á–µ–Ω–∏–π: ${removedDevices.join(', ')}`);\n        }\n\n        // –í—ã–≤–æ–¥–∏–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –æ –Ω–µ–≤–∞–ª–∏–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö —Ç–æ–ª—å–∫–æ –≤ –ø–æ–ª–¥–µ–Ω—å –∏–ª–∏ –ø—Ä–∏ debug\n        if (shouldShowWarnings) {\n            if (offlineDevices.length > 0) {\n                console.warn(`–í–ù–ò–ú–ê–ù–ò–ï: –£—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –Ω–µ –≤ —Å–µ—Ç–∏: ${offlineDevices.join(', ')}`);\n            }\n            if (invalidDataDevices.length > 0) {\n                console.warn(`–í–ù–ò–ú–ê–ù–ò–ï: –£—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –ø–µ—Ä–µ–¥–∞—é—Ç –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ (${CONSTANTS.INVALID_VALUE}): ${invalidDataDevices.join(', ')}`);\n            }\n        }\n\n        if (!hasRecentUpdates) {\n            const charName = getCharacteristicName(variables.characteristicType);\n            console.error(`–í–ù–ò–ú–ê–ù–ò–ï: –ù–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –æ—Ç –¥–∞—Ç—á–∏–∫–æ–≤ ${charName} –≤ —Ç–µ—á–µ–Ω–∏–µ —Å—É—Ç–æ–∫ –∏–ª–∏ –±–æ–ª–µ–µ –≤ –∫–æ–º–Ω–∞—Ç–µ \"${variables.roomName}\"`);\n        }\n    } catch (e) {\n        console.error(`–û—à–∏–±–∫–∞ –≤ checkSensorsUpdates: ${e.message}`);\n    }\n}\n\nfunction validateOptions(options) {\n    // –í–∞–ª–∏–¥–∞—Ü–∏—è –ø–æ—Ä–æ–≥–∞ —Ç–æ—á–Ω–æ—Å—Ç–∏\n    if (options.precisionThreshold === null || options.precisionThreshold === undefined || options.precisionThreshold < 0) {\n        console.error(\"–ü–æ—Ä–æ–≥ —Ç–æ—á–Ω–æ—Å—Ç–∏ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º –∏–ª–∏ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º. –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ: 0\");\n        options.precisionThreshold = 0;\n    }\n\n    if (options.precisionThreshold > CONSTANTS.MAX_PRECISION_THRESHOLD) {\n        console.warn(`–ü–æ—Ä–æ–≥ —Ç–æ—á–Ω–æ—Å—Ç–∏ —Å–ª–∏—à–∫–æ–º –≤–µ–ª–∏–∫. –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: ${CONSTANTS.MAX_PRECISION_THRESHOLD}`);\n        options.precisionThreshold = CONSTANTS.MAX_PRECISION_THRESHOLD;\n    }\n}\n\nfunction getRoomsList() {\n    let roomsList = [];\n    roomsList.push({ name: { ru: \"–ö–æ–º–Ω–∞—Ç–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞\", en: \"Device room\" }, value: \"\" });\n\n    const rooms = Hub.getRooms();\n    rooms.forEach(room => {\n        roomsList.push({\n            name: { ru: room.getName(), en: room.getName() },\n            value: room.getName()\n        });\n    });\n\n    return roomsList;\n}\n",
    "type": "LOGIC"
  }
}