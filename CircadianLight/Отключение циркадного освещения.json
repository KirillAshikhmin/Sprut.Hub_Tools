{
  "scenarioTemplate": {
    "name": "Отключение циркадного освещения",
    "desc": "Временно отключает циркадное освещение у выбранных ламп",
    "active": true,
    "onStart": false,
    "sync": false,
    "data": "let servicesList = [];\n\ninfo = {\n    name: \"Отключение циркадного освещения\",\n    description: \"Временно отключает циркадное освещение у выбранных ламп\",\n    version: \"1.0\",\n    author: \"@BOOMikru\",\n    onStart: false,\n\n    sourceServices: [HS.Switch],\n    sourceCharacteristics: [HC.On],\n\n    options: {\n        lamp1: {\n            name: {\n                en: \"Lamp 1\",\n                ru: \"Выберите лампу 1\"\n            },\n            type: \"String\",\n            value: \"\",\n            formType: \"list\",\n            values: servicesList\n        },\n        lamp1accessoryId: {\n            name: {\n                en: \"Lamp 1 Accessory\",\n                ru: \"   или укажите ID аксессуара лампы 1\"\n            },\n            type: \"Integer\",\n            value: 0,\n        },\n        lamp1serviceId: {\n            name: {\n                en: \"Lamp 1 Characteristic\",\n                ru: \"   и ID сервиса лампы 1\"\n            },\n            type: \"Integer\",\n            value: 0,\n        },\n        lamp2: {\n            name: {\n                en: \"Lamp 2\",\n                ru: \"Выберите лампу 2\"\n            },\n            type: \"String\",\n            value: \"\",\n            formType: \"list\",\n            values: servicesList\n        },\n        lamp2accessoryId: {\n            name: {\n                en: \"Lamp 2 Accessory\",\n                ru: \"   или укажите ID аксессуара лампы 2\"\n            },\n            type: \"Integer\",\n            value: 0,\n        },\n        lamp2serviceId: {\n            name: {\n                en: \"Lamp 2 Characteristic\",\n                ru: \"   и ID сервиса лампы 2\"\n            },\n            type: \"Integer\",\n            value: 0,\n        },\n        lamp3: {\n            name: {\n                en: \"Lamp 3\",\n                ru: \"Выберите лампу 3\"\n            },\n            type: \"String\",\n            value: \"\",\n            formType: \"list\",\n            values: servicesList\n        },\n        lamp3accessoryId: {\n            name: {\n                en: \"Lamp 3 Accessory\",\n                ru: \"   или укажите ID аксессуара лампы 3\"\n            },\n            type: \"Integer\",\n            value: 0,\n        },\n        lamp3serviceId: {\n            name: {\n                en: \"Lamp 3 Characteristic\",\n                ru: \"   и ID сервиса лампы 3\"\n            },\n            type: \"Integer\",\n            value: 0,\n        },\n        lamp4: {\n            name: {\n                en: \"Lamp 4\",\n                ru: \"Выберите лампу 4\"\n            },\n            type: \"String\",\n            value: \"\",\n            formType: \"list\",\n            values: servicesList\n        },\n        lamp4accessoryId: {\n            name: {\n                en: \"Lamp 4 Accessory\",\n                ru: \"   или укажите ID аксессуара лампы 4\"\n            },\n            type: \"Integer\",\n            value: 0,\n        },\n        lamp4serviceId: {\n            name: {\n                en: \"Lamp 4 Characteristic\",\n                ru: \"   и ID сервиса лампы 4\"\n            },\n            type: \"Integer\",\n            value: 0,\n        },\n        lamp5: {\n            name: {\n                en: \"Lamp 5\",\n                ru: \"Выберите лампу 5\"\n            },\n            type: \"String\",\n            value: \"\",\n            formType: \"list\",\n            values: servicesList\n        },\n        lamp5accessoryId: {\n            name: {\n                en: \"Lamp 5 Accessory\",\n                ru: \"   или укажите ID аксессуара лампы 5\"\n            },\n            type: \"Integer\",\n            value: 0,\n        },\n        lamp5serviceId: {\n            name: {\n                en: \"Lamp 5 Characteristic\",\n                ru: \"   и ID сервиса лампы 5\"\n            },\n            type: \"Integer\",\n            value: 0,\n        },\n        lamp6: {\n            name: {\n                en: \"Lamp 6\",\n                ru: \"Выберите лампу 6\"\n            },\n            type: \"String\",\n            value: \"\",\n            formType: \"list\",\n            values: servicesList\n        },\n        lamp6accessoryId: {\n            name: {\n                en: \"Lamp 6 Accessory\",\n                ru: \"   или укажите ID аксессуара лампы 6\"\n            },\n            type: \"Integer\",\n            value: 0,\n        },\n        lamp6serviceId: {\n            name: {\n                en: \"Lamp 6 Characteristic\",\n                ru: \"   и ID сервиса лампы 6\"\n            },\n            type: \"Integer\",\n            value: 0,\n        },\n        lamp7: {\n            name: {\n                en: \"Lamp 7\",\n                ru: \"Выберите лампу 7\"\n            },\n            type: \"String\",\n            value: \"\",\n            formType: \"list\",\n            values: servicesList\n        },\n        lamp7accessoryId: {\n            name: {\n                en: \"Lamp 7 Accessory\",\n                ru: \"   или укажите ID аксессуара лампы 7\"\n            },\n            type: \"Integer\",\n            value: 0,\n        },\n        lamp7serviceId: {\n            name: {\n                en: \"Lamp 7 Characteristic\",\n                ru: \"   и ID сервиса лампы 7\"\n            },\n            type: \"Integer\",\n            value: 0,\n        },\n        lamp8: {\n            name: {\n                en: \"Lamp 8\",\n                ru: \"Выберите лампу 8\"\n            },\n            type: \"String\",\n            value: \"\",\n            formType: \"list\",\n            values: servicesList\n        },\n        lamp8accessoryId: {\n            name: {\n                en: \"Lamp 8 Accessory\",\n                ru: \"   или укажите ID аксессуара лампы 8\"\n            },\n            type: \"Integer\",\n            value: 0,\n        },\n        lamp8serviceId: {\n            name: {\n                en: \"Lamp 8 Characteristic\",\n                ru: \"   и ID сервиса лампы 8\"\n            },\n            type: \"Integer\",\n            value: 0,\n        },\n        lamp9: {\n            name: {\n                en: \"Lamp 9\",\n                ru: \"Выберите лампу 9\"\n            },\n            type: \"String\",\n            value: \"\",\n            formType: \"list\",\n            values: servicesList\n        },\n        lamp9accessoryId: {\n            name: {\n                en: \"Lamp 9 Accessory\",\n                ru: \"   или укажите ID аксессуара лампы 9\"\n            },\n            type: \"Integer\",\n            value: 0,\n        },\n        lamp9serviceId: {\n            name: {\n                en: \"Lamp 9 Characteristic\",\n                ru: \"   и ID сервиса лампы 9\"\n            },\n            type: \"Integer\",\n            value: 0,\n        },\n        lamp10: {\n            name: {\n                en: \"Lamp 10\",\n                ru: \"Выберите лампу 10\"\n            },\n            type: \"String\",\n            value: \"\",\n            formType: \"list\",\n            values: servicesList\n        },\n        lamp10accessoryId: {\n            name: {\n                en: \"Lamp 10 Accessory\",\n                ru: \"   или укажите ID аксессуара лампы 10\"\n            },\n            type: \"Integer\",\n            value: 0,\n        },\n        lamp10serviceId: {\n            name: {\n                en: \"Lamp 10 Characteristic\",\n                ru: \"   и ID сервиса лампы 10\"\n            },\n            type: \"Integer\",\n            value: 0,\n        }\n    },\n\n    variables: {\n        lampsValiablesList: undefined,\n\n    }\n};\n\nfunction trigger(source, value, variables, options) {\n    try {\n        const lampsValiablesList = getLampsList(variables, options)\n        for (let i = 0; i < lampsValiablesList.length; i++) {\n            GlobalVariables[lampsValiablesList[i]] = !value\n        }\n    } catch (e) {\n        log.error(\"Ошибка выполнения задачи: \" + e.message);\n    }\n}\n\nfunction getLampsList(variables, options) {\n    if (variables.lampsValiablesList && variables.lampsValiablesList.length != 0) {\n        return lampsValiablesList.lampsList\n    }\n    let lampsList = [];\n\n    for (let i = 1; i <= 10; i++) {\n        let lamp = getLamp(options, i)\n        if (lamp) lampsList.push(lamp)\n    }\n    if (lampsList.length == 0) {\n        log.error(\"Выберите минимум 1 лампу\");\n        return undefined;\n    }\n    let lampsValiablesList = [];\n    for (let i = 0; i < lampsList.length; i++) {\n        lampsValiablesList.push(global.getCircadianLightGlobalVariableForDisable(lampsList[i]))\n    }\n\n    return lampsValiablesList\n}\n\nfunction getLamp(options, i) {\n    if (options[\"lamp\" + i] === '' && (options[\"lamp\" + i + \"accessoryId\"] <= 0 || options[\"lamp\" + i + \"serviceId\"] <= 0)) {\n        return undefined;\n    }\n    var service\n    if (options[\"lamp\" + i] != '') {\n        const cdata = options[\"lamp\" + i].split('.');\n        const aid = cdata[0];\n        const sid = cdata[1];\n        service = Hub.getAccessory(aid).getService(sid)\n        if (service == null) {\n            log.error(\"Выбранное устройство не найдено {}\", options[\"lamp\" + i]);\n            return undefined;\n        }\n    } else {\n        let accessory = Hub.getAccessory(options[\"lamp\" + i + \"accessoryId\"])\n        if (accessory == null) {\n            log.error(\"Введённое устройство не найдено {}\", options[\"lamp\" + i + \"accessoryId\"]);\n            return undefined;\n        }\n        service = accessory.getService(options[\"lamp\" + i + \"serviceId\"])\n        if (service == null) {\n            log.error(\"Введённый сервис не найден у аксессуара {} {}\", accessory.getName(), accessory.getUUID());\n            return undefined;\n        }\n    }\n    return service\n}\n\nlet servicesListUnsort = [];\n// подготовка списка характеристик для выбора в настройке логики\nHub.getAccessories().forEach(function (a) {\n    a.getServices().filter(function (s) {return s.getType() == HS.Lightbulb}).forEach(function (s) {\n        const c = s.getCharacteristic(HC.Brightness);\n        if (!c) return;\n        let displayname = global.getCircadianLightServiceName(s)\n        servicesListUnsort.push({\n            name: { ru: displayname, en: displayname },\n            value: s.getUUID()\n        });\n    })\n});\n\nservicesList.push({ name: { ru: \"Не выбрано\", en: \"Not selected\", en: \"\" }, value: '' });\nservicesListUnsort.sort(function (a, b) { return a.name.ru.localeCompare(b.name.ru); }).forEach(function (s) { servicesList.push(s) })\n",
    "type": "LOGIC"
  }
}