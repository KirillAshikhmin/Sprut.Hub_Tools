{
  "scenarioTemplate": {
    "name": "Планировщик расширенный",
    "desc": "Включает выключатель в заданное время в указанные дни месяца и/или дни недели. Обновления в канале https://t.me/smart_sputnik",
    "active": true,
    "onStart": true,
    "sync": false,
    "data": "info = {\n  name: \"Планировщик расширенный\",\n  description: \"Включает выключатель в заданное время в указанные дни месяца и/или дни недели. Обновления в канале https://t.me/smart_sputnik\",\n  version: \"1.0\",\n  author: \"@BOOMikru\",\n  active: true,\n  onStart: true,\n  sync: false,\n  sourceServices: [HS.Switch],\n  sourceCharacteristics: [HC.On],\n\n  options: {\n    Time: {\n      name: {\n        en: \"Time (HH:MM)\",\n        ru: \"Время (ЧЧ:ММ)\"\n      },\n      desc: {\n        en: \"Time to turn on in 24-hour format. Restart the script via 'Active' toggle after changing.\",\n        ru: \"Время включения в 24-часовом формате.\\nПосле изменения времени перезапустите сценарий через переключатель 'Активно'.\"\n      },\n      type: \"String\",\n      value: \"00:00\"\n    },\n    DaysOfMonth: {\n      name: {\n        en: \"Days of month\",\n        ru: \"Дни месяца\"\n      },\n      desc: {\n        en: \"Days of the month to activate (e.g., '1' or '15; 30'). Leave empty to ignore.\",\n        ru: \"Числа месяца для включения (например, '1' или '15; 30').\\nОставьте пустым, чтобы игнорировать.\"\n      },\n      type: \"String\",\n      value: \"\"\n    },\n    ActiveMonths: {\n      name: {\n        en: \"Active months\",\n        ru: \"Активные месяцы\"\n      },\n      desc: {\n        en: \"Months when the switch should activate (e.g., '1' or '1, 6; 12'). Default is all months.\",\n        ru: \"Месяцы, когда выключатель должен включаться (например, '1' или '1, 6; 12').\\nПо умолчанию все месяцы.\"\n      },\n      type: \"String\",\n      value: \"1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12\"\n    },\n    Monday: {\n      name: {\n        en: \"Every Monday\",\n        ru: \"Каждый понедельник\"\n      },\n      type: \"Boolean\",\n      value: false\n    },\n    Tuesday: {\n      name: {\n        en: \"Every Tuesday\",\n        ru: \"Каждый вторник\"\n      },\n      type: \"Boolean\",\n      value: false\n    },\n    Wednesday: {\n      name: {\n        en: \"Every Wednesday\",\n        ru: \"Каждую среду\"\n      },\n      type: \"Boolean\",\n      value: false\n    },\n    Thursday: {\n      name: {\n        en: \"Every Thursday\",\n        ru: \"Каждый четверг\"\n      },\n      type: \"Boolean\",\n      value: false\n    },\n    Friday: {\n      name: {\n        en: \"Every Friday\",\n        ru: \"Каждую пятницу\"\n      },\n      type: \"Boolean\",\n      value: false\n    },\n    Saturday: {\n      name: {\n        en: \"Every Saturday\",\n        ru: \"Каждую субботу\"\n      },\n      type: \"Boolean\",\n      value: false\n    },\n    Sunday: {\n      name: {\n        en: \"Every Sunday\",\n        ru: \"Каждое воскресенье\"\n      },\n      type: \"Boolean\",\n      value: false\n    },\n    AutoTurnOff: {\n      name: {\n        en: \"Turn off automatically\",\n        ru: \"Автоматически выключать\"\n      },\n      desc: {\n        en: \"If enabled, the switch turns off 1 second after being turned on.\",\n        ru: \"Если включено, выключатель выключается через 1 секунду после включения.\"\n      },\n      type: \"Boolean\",\n      value: false\n    },\n    TurnOffTime: {\n      name: {\n        en: \"Turn off time (HH:MM)\",\n        ru: \"Время отключения (ЧЧ:ММ)\"\n      },\n      desc: {\n        en: \"Time to turn off in 24-hour format. Restart the script via 'Active' toggle after changing.\",\n        ru: \"Время отключения в 24-часовом формате.\\nПосле изменения времени перезапустите сценарий через переключатель 'Активно'.\"\n      },\n      type: \"String\",\n      value: \"00:00\"\n    }\n  },\n  variables: {\n    cronTask: undefined, // Задача для включения в указанное время\n    midnightTask: undefined, // Задача для выключения в указанное время\n    prevTime: undefined // Предыдущее значение options.Time\n  }\n}\n\nfunction trigger(source, value, variables, options, context) {\n  // Проверяем, изменилось ли время в настройках\n  if (variables.prevTime !== options.Time) {\n    if (variables.cronTask) {\n      variables.cronTask.clear();\n      variables.cronTask = undefined;\n    }\n    if (variables.midnightTask) {\n      variables.midnightTask.clear();\n      variables.midnightTask = undefined;\n    }\n    variables.prevTime = options.Time; // Сохраняем новое значение времени\n  }\n\n  // Если задачи уже запущены, ничего не делаем\n  if (variables.cronTask) return;\n\n  // Валидация времени включения\n  var time = options.Time || \"\"; // Если undefined, используем пустую строку\n  var hours, minutes;\n  var timeMatch = time.match(/^(\\d{1,2}):(\\d{1,2})$/); // Поддержка без ведущего нуля (например, \"5:30\")\n  if (timeMatch) {\n    hours = parseInt(timeMatch[1], 10);\n    minutes = parseInt(timeMatch[2], 10);\n    if (hours < 0 || hours > 23 || minutes < 0 || minutes > 59) {\n      console.warn(\"Некорректное время \\\"\" + time + \"\\\" (часы: 0-23, минуты: 0-59), используется \\\"00:00\\\"\");\n      hours = 0;\n      minutes = 0;\n    }\n  } else {\n    console.warn(\"Некорректный формат времени \\\"\" + time + \"\\\", ожидается ЧЧ:ММ, используется \\\"00:00\\\"\");\n    hours = 0;\n    minutes = 0;\n  }\n  var hoursStr = hours < 10 ? \"0\" + hours : \"\" + hours;\n  var minutesStr = minutes < 10 ? \"0\" + minutes : \"\" + minutes;\n  time = hoursStr + \":\" + minutesStr; // Формат \"ЧЧ:ММ\"\n\n  // Валидация времени отключения\n  var turnOffTime = options.TurnOffTime || \"\"; // Если undefined, используем пустую строку\n  var turnOffHours, turnOffMinutes;\n  var turnOffTimeMatch = turnOffTime.match(/^(\\d{1,2}):(\\d{1,2})$/); // Поддержка без ведущего нуля\n  if (turnOffTimeMatch) {\n    turnOffHours = parseInt(turnOffTimeMatch[1], 10);\n    turnOffMinutes = parseInt(turnOffTimeMatch[2], 10);\n    if (turnOffHours < 0 || turnOffHours > 23 || turnOffMinutes < 0 || turnOffMinutes > 59) {\n      console.warn(\"Некорректное время отключения \\\"\" + turnOffTime + \"\\\" (часы: 0-23, минуты: 0-59), используется \\\"00:00\\\"\");\n      turnOffHours = 0;\n      turnOffMinutes = 0;\n    }\n  } else {\n    console.warn(\"Некорректный формат времени отключения \\\"\" + turnOffTime + \"\\\", ожидается ЧЧ:ММ, используется \\\"00:00\\\"\");\n    turnOffHours = 0;\n    turnOffMinutes = 0;\n  }\n  var turnOffHoursStr = turnOffHours < 10 ? \"0\" + turnOffHours : \"\" + turnOffHours;\n  var turnOffMinutesStr = turnOffMinutes < 10 ? \"0\" + turnOffMinutes : \"\" + turnOffMinutes;\n  turnOffTime = turnOffHoursStr + \":\" + turnOffMinutesStr; // Формат \"ЧЧ:ММ\"\n\n  // Валидация дней месяца\n  var daysOfMonth = options.DaysOfMonth.replace(/\\s/g, \"\").split(/[,;]/).map(Number).filter(function(num) { return num; });\n  daysOfMonth = daysOfMonth.filter(function(day) {\n    if (day >= 1 && day <= 31) {\n      return true;\n    } else {\n      console.warn(\"Некорректное число месяца \\\"\" + day + \"\\\" (допустимы: 1-31), будет проигнорировано\");\n      return false;\n    }\n  });\n\n  // Валидация активных месяцев\n  var activeMonths = options.ActiveMonths.replace(/\\s/g, \"\").split(/[,;]/).map(Number).filter(function(num) { return num; });\n  activeMonths = activeMonths.filter(function(month) {\n    if (month >= 1 && month <= 12) {\n      return true;\n    } else {\n      console.warn(\"Некорректное значение месяца \\\"\" + month + \"\\\" (допустимы: 1-12), будет проигнорировано\");\n      return false;\n    }\n  });\n  if (activeMonths.length === 0) {\n    console.warn(\"Нет валидных месяцев в \\\"\" + options.ActiveMonths + \"\\\", используются все месяцы (1-12)\");\n    activeMonths = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n  }\n\n  // Парсим дни недели\n  var daysOfWeek = [\n    options.Sunday, options.Monday, options.Tuesday, options.Wednesday,\n    options.Thursday, options.Friday, options.Saturday\n  ];\n\n  // Основная задача: включение в указанное время\n  variables.cronTask = Cron.schedule(\"0 \" + minutesStr + \" \" + hoursStr + \" * * *\", function() {\n    var now = new Date();\n    var month = now.getMonth() + 1; // getMonth() возвращает 0-11, добавляем 1 для 1-12\n    var dayOfMonth = now.getDate();\n    var dayOfWeek = now.getDay(); // 0 - воскресенье, 1 - понедельник, ..., 6 - суббота\n\n    var isMonthMatch = activeMonths.indexOf(month) !== -1;\n    var isDayOfMonthMatch = daysOfMonth.length > 0 && daysOfMonth.indexOf(dayOfMonth) !== -1;\n    var isDayOfWeekMatch = daysOfWeek[dayOfWeek];\n\n    if (isMonthMatch && (isDayOfMonthMatch || isDayOfWeekMatch)) {\n      source.setValue(true);\n      console.info(\"Выключатель включён в \" + time + \" для месяца \" + month + \", дня \" + dayOfMonth + \", дня недели \" + dayOfWeek);\n      \n      // Если включена опция автоматического выключения\n      if (options.AutoTurnOff) {\n        setTimeout(function() {\n          source.setValue(false);\n          console.info(\"Выключатель автоматически выключен через 1 секунду в \" + time);\n        }, 1000); // 1 секунда = 1000 мс\n      }\n    } else {\n      source.setValue(false);\n      console.info(\"Выключатель выключен в \" + time + \" - условия не совпадают (месяц: \" + month + \", день: \" + dayOfMonth + \", день недели: \" + dayOfWeek + \")\");\n    }\n  });\n\n  // Задача на отключение: выключение в указанное время, если оно не совпадает с временем включения\n  if (time !== turnOffTime) {\n    variables.midnightTask = Cron.schedule(\"0 \" + turnOffMinutesStr + \" \" + turnOffHoursStr + \" * * *\", function() {\n      source.setValue(false);\n      console.info(\"Выключатель выключен в \" + turnOffTime);\n    });\n  } else {\n    console.info(\"Время отключения (\" + turnOffTime + \") совпадает с временем включения, задача на отключение не запущена\");\n  }\n\n  console.info(\"Задачи Cron запущены для включения в указанные даты и время.\");\n}",
    "type": "LOGIC"
  }
}