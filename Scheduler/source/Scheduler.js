info = {
  name: "üìÖ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π",
  description: "–í–∫–ª—é—á–∞–µ—Ç –≤—ã–∫–ª—é—á–∞—Ç–µ–ª—å –≤ –∑–∞–¥–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è –≤ —É–∫–∞–∑–∞–Ω–Ω—ã–µ –¥–Ω–∏ –º–µ—Å—è—Ü–∞ –∏/–∏–ª–∏ –¥–Ω–∏ –Ω–µ–¥–µ–ª–∏. –û–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª–µ https://t.me/smart_sputnik",
  version: "1.2",
  author: "@BOOMikru",
  onStart: true,
  sourceServices: [
    HS.Switch, HS.Outlet, HS.Fan, HS.FanBasic, HS.Lightbulb,
    HS.Faucet, HS.C_PetFeeder, HS.Valve, HS.HeaterCooler, HS.AirPurifier,
    HS.IrrigationSystem, HS.Television, HS.HumidifierDehumidifier, HS.CameraControl
  ],
  sourceCharacteristics: [HC.On, HC.Active],

  options: {
    DaysOfMonth: {
      name: {
        en: "Days of month",
        ru: "–î–Ω–∏ –º–µ—Å—è—Ü–∞"
      },
      desc: {
        en: "Days of the month to activate (e.g., '1', '15, 30' or '1-5').\nActivation occurs on selected weekdays and specified days. If neither days nor weekdays are set, no activation happens.",
        ru: "–ß–∏—Å–ª–∞ –º–µ—Å—è—Ü–∞ –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, '1', '15, 30' –∏–ª–∏ '1-5').\n–í–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø–æ –≤—ã–±—Ä–∞–Ω–Ω—ã–º –¥–Ω—è–º –Ω–µ–¥–µ–ª–∏ –∏ —É–∫–∞–∑–∞–Ω–Ω—ã–º —á–∏—Å–ª–∞–º. –ï—Å–ª–∏ –Ω–µ —É–∫–∞–∑–∞—Ç—å —á–∏—Å–ª–∞ –∏ –¥–Ω–∏ –Ω–µ–¥–µ–ª–∏, –≤–∫–ª—é—á–µ–Ω–∏–µ –Ω–µ –ø—Ä–æ–∏–∑–æ–π–¥—ë—Ç."
      },
      type: "String",
      value: ""
    },
    Monday: {
      name: {
        en: "Every Monday",
        ru: "–ö–∞–∂–¥—ã–π –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫"
      },
      type: "Boolean",
      value: false
    },
    Tuesday: {
      name: {
        en: "Every Tuesday",
        ru: "–ö–∞–∂–¥—ã–π –≤—Ç–æ—Ä–Ω–∏–∫"
      },
      type: "Boolean",
      value: false
    },
    Wednesday: {
      name: {
        en: "Every Wednesday",
        ru: "–ö–∞–∂–¥—É—é —Å—Ä–µ–¥—É"
      },
      type: "Boolean",
      value: false
    },
    Thursday: {
      name: {
        en: "Every Thursday",
        ru: "–ö–∞–∂–¥—ã–π —á–µ—Ç–≤–µ—Ä–≥"
      },
      type: "Boolean",
      value: false
    },
    Friday: {
      name: {
        en: "Every Friday",
        ru: "–ö–∞–∂–¥—É—é –ø—è—Ç–Ω–∏—Ü—É"
      },
      type: "Boolean",
      value: false
    },
    Saturday: {
      name: {
        en: "Every Saturday",
        ru: "–ö–∞–∂–¥—É—é —Å—É–±–±–æ—Ç—É"
      },
      type: "Boolean",
      value: false
    },
    Sunday: {
      name: {
        en: "Every Sunday",
        ru: "–ö–∞–∂–¥–æ–µ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ"
      },
      type: "Boolean",
      value: false
    },
    ActiveMonths: {
      name: {
        en: "Active months",
        ru: "–ê–∫—Ç–∏–≤–Ω—ã–µ –º–µ—Å—è—Ü—ã"
      },
      desc: {
        en: "Months when the device should activate (e.g., '1', '1, 6, 12' or '6-8').\nBy default every month.",
        ru: "–ú–µ—Å—è—Ü—ã, –∫–æ–≥–¥–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –¥–æ–ª–∂–Ω–æ –≤–∫–ª—é—á–∞—Ç—å—Å—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, '1', '1, 6, 12' –∏–ª–∏ '6-8').\n–ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –∫–∞–∂–¥—ã–π –º–µ—Å—è—Ü."
      },
      type: "String",
      value: ""
    },
    Time: {
      name: {
        en: "Time (HH:MM)",
        ru: "–í—Ä–µ–º—è (–ß–ß:–ú–ú)"
      },
      desc: {
        en: "Time when activation occurs. Midnight by default.\nTime to turn on in 24-hour format. Restart the script via 'Active' toggle after changing.",
        ru: "–í—Ä–µ–º—è, –≤ –∫–æ—Ç–æ—Ä–æ–µ –ø—Ä–æ–∏–∑–æ–π–¥—ë—Ç –≤–∫–ª—é—á–µ–Ω–∏–µ. –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤ –ø–æ–ª–Ω–æ—á—å.\n–ü–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å—Ü–µ–Ω–∞—Ä–∏–π —á–µ—Ä–µ–∑ –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å '–ê–∫—Ç–∏–≤–Ω–æ'."
      },
      type: "String",
      value: "00:00"
    },
    DontTurnOff: {
      name: {
        en: "Don't turn off automatically",
        ru: "–ù–µ –æ—Ç–∫–ª—é—á–∞—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏"
      },
      desc: {
        en: "If enabled, the device will only turn on without automatic turning off.",
        ru: "–ï—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω–æ, —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –±—É–¥–µ—Ç —Ç–æ–ª—å–∫–æ –≤–∫–ª—é—á–∞—Ç—å—Å—è –±–µ–∑ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è."
      },
      type: "Boolean",
      value: false
    },
    TurnOffTime: {
      name: {
        en: "Turn off time (HH:MM)",
        ru: "–í—Ä–µ–º—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è (–ß–ß:–ú–ú)"
      },
      desc: {
        en: "Time to turn off the switch. Midnight by default.\nIf turn-on and turn-off times match, it may not turn off if the next day meets the conditions.\nWill not turn off if 'Don't turn off' is enabled.",
        ru: "–í—Ä–µ–º—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –≤—ã–∫–ª—é—á–∞—Ç–µ–ª—è. –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –ø–æ–ª–Ω–æ—á—å.\n–ï—Å–ª–∏ –≤—Ä–µ–º—è –≤–∫–ª—é—á–µ–Ω–∏—è –∏ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è —Å–æ–≤–ø–∞–¥–∞–µ—Ç, —Ç–æ –º–æ–∂–µ—Ç –Ω–µ –æ—Ç–∫–ª—é—á–∏—Ç—å—Å—è, –µ—Å–ª–∏ —Å–ª–µ–¥—É—é—â–∏–π –¥–µ–Ω—å –ø–æ–¥—Ö–æ–¥–∏—Ç –ø–æ–¥ —É—Å–ª–æ–≤–∏—è.\n–ù–µ –æ—Ç–∫–ª—é—á–∏—Ç—Å—è, –µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω–æ '–ù–µ –æ—Ç–∫–ª—é—á–∞—Ç—å'."
      },
      type: "String",
      value: "00:00"
    },
    TurnOffDelay: {
      name: {
        en: "Turn off delay (seconds)",
        ru: "–í—ã–∫–ª—é—á–∏—Ç—å —á–µ—Ä–µ–∑ (—Å–µ–∫—É–Ω–¥—ã)"
      },
      desc: {
        en: "Delay in seconds before turning off after activation. Set to 0 to disable automatic turn-off.\nWill not turn off if 'Don't turn off' is enabled.",
        ru: "–ü–æ—Å–ª–µ –≤–∫–ª—é—á–µ–Ω–∏—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–∫–ª—é—á–∏—Ç—Å—è —á–µ—Ä–µ–∑ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–µ–∫—É–Ω–¥. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ 0, —á—Ç–æ–±—ã –æ—Ç–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ.\n–ù–µ –æ—Ç–∫–ª—é—á–∏—Ç—Å—è, –µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω–æ '–ù–µ –æ—Ç–∫–ª—é—á–∞—Ç—å'."
      },
      type: "Integer",
      value: 0
    },
    Invert: {
      name: {
        en: "Invert",
        ru: "–ò–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ"
      },
      desc: {
        en: "Instead of turning on it will turn off, and instead of turning off it will turn on",
        ru: "–í–º–µ—Å—Ç–æ –≤–∫–ª—é—á–µ–Ω–∏—è –±—É–¥–µ—Ç –æ—Ç–∫–ª—é—á–∞—Ç—å—Å—è, –∞ –≤–º–µ—Å—Ç–æ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è - –≤–∫–ª—é—á–∞—Ç—å—Å—è"
      },
      type: "Boolean",
      value: false
    }
  },
  variables: {
    cronTask: undefined, // –ó–∞–¥–∞—á–∞ –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è
    midnightTask: undefined, // –ó–∞–¥–∞—á–∞ –¥–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è –∏–ª–∏ –≤ –ø–æ–ª–Ω–æ—á—å
    prevTime: undefined, // –ü—Ä–µ–¥—ã–¥—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ options.Time
    prevTurnOffTime: undefined // –ü—Ä–µ–¥—ã–¥—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ options.TurnOffTime
  }
}

function trigger(source, value, variables, options, context) {
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–∑–º–µ–Ω–∏–ª–æ—Å—å –ª–∏ –≤—Ä–µ–º—è –≤–∫–ª—é—á–µ–Ω–∏—è –∏–ª–∏ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö
  if (variables.prevTime !== options.Time || variables.prevTurnOffTime !== options.TurnOffTime) {
    if (variables.cronTask) {
      variables.cronTask.clear();
      variables.cronTask = undefined;
    }
    if (variables.midnightTask) {
      variables.midnightTask.clear();
      variables.midnightTask = undefined;
    }
    variables.prevTime = options.Time; // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –≤–∫–ª—é—á–µ–Ω–∏—è
    variables.prevTurnOffTime = options.TurnOffTime; // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è
  }

  // –ï—Å–ª–∏ –∑–∞–¥–∞—á–∏ —É–∂–µ –∑–∞–ø—É—â–µ–Ω—ã, –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º
  if (variables.cronTask) return;

  let timeObj = perseTime(options.Time)
  let time = timeObj.time
  let hoursStr = timeObj.hoursStr
  let minutesStr = timeObj.minutesStr

  let timeOffObj = perseTime(options.TurnOffTime)
  let turnOffTime = timeOffObj.time
  let turnOffHoursStr = timeOffObj.hoursStr
  let turnOffMinutesStr = timeOffObj.minutesStr

  // –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–Ω–µ–π –º–µ—Å—è—Ü–∞ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –¥–∏–∞–ø–∞–∑–æ–Ω–æ–≤
  var daysOfMonth = parseRange(options.DaysOfMonth);
  daysOfMonth = daysOfMonth.filter(function (day) {
    if (day >= 1 && day <= 31) {
      return true;
    } else {
      console.warn("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ –º–µ—Å—è—Ü–∞ \"" + day + "\" (–¥–æ–ø—É—Å—Ç–∏–º—ã: 1-31), –±—É–¥–µ—Ç –ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω–æ");
      return false;
    }
  });

  // –í–∞–ª–∏–¥–∞—Ü–∏—è –∞–∫—Ç–∏–≤–Ω—ã—Ö –º–µ—Å—è—Ü–µ–≤ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –¥–∏–∞–ø–∞–∑–æ–Ω–æ–≤
  var activeMonths = parseRange(options.ActiveMonths);
  activeMonths = activeMonths.filter(function (month) {
    if (month >= 1 && month <= 12) {
      return true;
    } else {
      console.warn("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –º–µ—Å—è—Ü–∞ \"" + month + "\" (–¥–æ–ø—É—Å—Ç–∏–º—ã: 1-12), –±—É–¥–µ—Ç –ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω–æ");
      return false;
    }
  });
  if (activeMonths.length === 0) {
    //console.warn("–ù–µ—Ç –≤–∞–ª–∏–¥–Ω—ã—Ö –º–µ—Å—è—Ü–µ–≤ –≤ \"" + options.ActiveMonths + "\", –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –≤—Å–µ –º–µ—Å—è—Ü—ã (1-12)");
    activeMonths = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];
  }

  // –ü–∞—Ä—Å–∏–º –¥–Ω–∏ –Ω–µ–¥–µ–ª–∏
  var daysOfWeek = [
    options.Sunday, options.Monday, options.Tuesday, options.Wednesday,
    options.Thursday, options.Friday, options.Saturday
  ];

  let setNewValue = function () {
    let now = new Date();
    let month = now.getMonth() + 1; // getMonth() –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç 0-11, –¥–æ–±–∞–≤–ª—è–µ–º 1 –¥–ª—è 1-12
    let dayOfMonth = now.getDate();
    let dayOfWeek = now.getDay(); // 0 - –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ, 1 - –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫, ..., 6 - —Å—É–±–±–æ—Ç–∞

    let isMonthMatch = activeMonths.indexOf(month) !== -1;
    let isDayOfMonthMatch = daysOfMonth.length > 0 && daysOfMonth.indexOf(dayOfMonth) !== -1;
    let isDayOfWeekMatch = daysOfWeek[dayOfWeek];

    // –ï—Å–ª–∏ —É–∫–∞–∑–∞–Ω—ã —Ç–æ–ª—å–∫–æ –º–µ—Å—è—Ü—ã, –Ω–æ –Ω–µ—Ç –Ω–∏ –¥–Ω–µ–π –º–µ—Å—è—Ü–∞, –Ω–∏ –¥–Ω–µ–π –Ω–µ–¥–µ–ª–∏, –≤–∫–ª—é—á–µ–Ω–∏–µ –Ω–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç
    if (isMonthMatch && (isDayOfMonthMatch || isDayOfWeekMatch)) {
      setDeviceValue(source, true, options.Invert);
      //console.info("–£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –≤–∫–ª—é—á–µ–Ω–æ –≤ " + time + " –¥–ª—è –º–µ—Å—è—Ü–∞ " + month + ", –¥–Ω—è " + dayOfMonth + ", –¥–Ω—è –Ω–µ–¥–µ–ª–∏ " + dayOfWeek);

      // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ —Å —É—á—ë—Ç–æ–º TurnOffDelay, –µ—Å–ª–∏ –Ω–µ DontTurnOff –∏ TurnOffDelay > 0
      if (options.TurnOffDelay > 0 && !options.DontTurnOff) {
        setTimeout(function () {
          setDeviceValue(source, false, options.Invert);
         // console.info("–£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–∫–ª—é—á–µ–Ω–æ —á–µ—Ä–µ–∑ " + options.TurnOffDelay + " —Å–µ–∫—É–Ω–¥ –≤ " + time);
        }, options.TurnOffDelay * 1000);
      }
    } else if (!options.DontTurnOff) {
      setDeviceValue(source, false, options.Invert);
      //console.info("–£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –æ—Ç–∫–ª—é—á–µ–Ω–æ –≤ " + time + " - —É—Å–ª–æ–≤–∏—è –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç (–º–µ—Å—è—Ü: " + month + ", –¥–µ–Ω—å: " + dayOfMonth + ", –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏ " + dayOfWeek + ")");
    }
  }

  //console.info("–ö—Ä–æ–Ω –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –∑–Ω–∞–ø—É—â–µ–Ω –Ω–∞ {}", "0 " + minutesStr + " " + hoursStr + " * * *")
  // –û—Å–Ω–æ–≤–Ω–∞—è –∑–∞–¥–∞—á–∞: –≤–∫–ª—é—á–µ–Ω–∏–µ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è
  variables.cronTask = Cron.schedule("0 " + minutesStr + " " + hoursStr + " * * *", setNewValue);

  // –ó–∞–¥–∞—á–∞ –Ω–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ: –∏—Å–ø–æ–ª—å–∑—É–µ–º TurnOffTime, –µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω–æ, –∏–Ω–∞—á–µ –ø–æ–ª–Ω–æ—á—å (–µ—Å–ª–∏ –Ω–µ DontTurnOff)
  if (!options.DontTurnOff && time != turnOffTime) {
    var offSchedule = (turnOffTime === "00:00" && options.TurnOffTime === "") ? "0 0 0 * * *" : "0 " + turnOffMinutesStr + " " + turnOffHoursStr + " * * *";
    //console.info("–ö—Ä–æ–Ω –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –Ω–∞ –≤—ã–∫–ª –∑–Ω–∞–ø—É—â–µ–Ω –Ω–∞ {}", offSchedule)
    variables.midnightTask = Cron.schedule(offSchedule, function () {
      setDeviceValue(source, false, options.Invert);
     // console.info("–£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –æ—Ç–∫–ª—é—á–µ–Ω–æ –≤ " + turnOffTime);
    });
  } else {
    //console.info("–ö—Ä–æ–Ω –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –Ω–∞ –≤—ã–∫–ª –ù–ï –∑–Ω–∞–ø—É—â–µ–Ω")
  }
}

function setDeviceValue(source, value, invert) {
  var isOnCharacteristic = source.getType() == HC.On;
  var isActiveCharacteristic = source.getType() == HC.Active;
  if (invert) value = !value
  if (isOnCharacteristic) {
    source.setValue(value);
  } else if (isActiveCharacteristic) {
    source.setValue(value ? 1 : 0);
  }
}

function parseRange(str) {
  var result = [];
  if (!str) return result; // –ï—Å–ª–∏ —Å—Ç—Ä–æ–∫–∞ –ø—É—Å—Ç–∞—è, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤
  str.replace(/\s/g, "").split(/[,;]/).forEach(function (part) {
    var range = part.split('-');
    if (range.length === 2) {
      var start = parseInt(range[0], 10);
      var end = parseInt(range[1], 10);
      if (start && end && start <= end) {
        for (var i = start; i <= end; i++) result.push(i);
      }
    } else {
      var num = parseInt(part, 10);
      if (num) result.push(num);
    }
  });
  return result.filter(function (num) { return num; });
}

function perseTime(str) {
  // –í–∞–ª–∏–¥–∞—Ü–∏—è –≤—Ä–µ–º–µ–Ω–∏ –≤–∫–ª—é—á–µ–Ω–∏—è (Time)
  var time = str || ""; // –ï—Å–ª–∏ undefined, –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É
  var hours, minutes;
  var timeMatch = time.match(/^(\d{1,2}):(\d{1,2})$/); // –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –±–µ–∑ –≤–µ–¥—É—â–µ–≥–æ –Ω—É–ª—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, "5:30")
  if (timeMatch) {
    hours = parseInt(timeMatch[1], 10);
    minutes = parseInt(timeMatch[2], 10);
    if (hours < 0 || hours > 23 || minutes < 0 || minutes > 59) {
      console.warn("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –≤—Ä–µ–º—è \"" + time + "\" (—á–∞—Å—ã: 0-23, –º–∏–Ω—É—Ç—ã: 0-59), –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è \"00:00\"");
      hours = 0;
      minutes = 0;
    }
  } else {
    console.warn("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏ \"" + time + "\", –æ–∂–∏–¥–∞–µ—Ç—Å—è –ß–ß:–ú–ú, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è \"00:00\"");
    hours = 0;
    minutes = 0;
  }
  var hoursStr = hours < 10 ? "0" + hours : "" + hours;
  var minutesStr = minutes < 10 ? "0" + minutes : "" + minutes;
  time = hoursStr + ":" + minutesStr; // –§–æ—Ä–º–∞—Ç "–ß–ß:–ú–ú"
  return {
    time: time,
    hoursStr: hoursStr,
    minutesStr: minutesStr
  }
}