{
  "scenarioTemplate": {
    "name": "Выключить весь свет",
    "desc": "Выключает все светильники и выключатели в доме.\nvar excludeRoomsNames = [\"Информер\", \"Комп\", \"Виртуальная\", \"Контрольная\"]; //ID комнат, где не надо выключать свет\nvar excludeAccessoriesId = [130]; //ID устройств, которые не надо выключать \n\nВызывать из блочного сценария блоком кода\nglobal.turnOffLight()\n\nВ вызов можно передать название комнат(ы) global.turnOffLight([\"Коридор\",\"Двор\"]), ID определённых устройств global.turnOffLight([],[11,42]), так и всё вместе global.turnOffLight([\"Коридор\",\"Двор\"],[11,42])\nПри этом не будет отключаться свет из комнат в теле сценария и те, что в вызове.",
    "active": true,
    "onStart": false,
    "sync": false,
    "data": "var excludeRoomsNames = [\"Виртуальная\"]; //ID комнат, где не надо выключать свет\r\nvar excludeAccessoriesId = [130, 188]; //ID устройств, которые не надо выключать \r\nvar turnOffHidden = false; // Отключать скрытые\r\nvar turnOffLightDebug = false; // Активация дополнительного логгирования для отладки\r\n\r\nfunction turnOffLight(excludeRooms, excludeAccessories) {\r\n    var excRooms = []\r\n    var excAccessories = []\r\n\r\n    excludeRoomsNames.forEach(function fe(room) { excRooms.push(room) })\r\n    getArrayFromValue(excludeRooms, \"string\").forEach(function fe(room) { excRooms.push(room) })\r\n\r\n    excludeAccessoriesId.forEach(function fe(acc) { excAccessories.push(acc) })\r\n    getArrayFromValue(excludeAccessories, \"number\").forEach(function fe(acc) { excAccessories.push(acc) })\r\n\r\n    if (turnOffLightDebug) log.info(\"Exclude Rooms \" + excRooms.join(\"- \"));\r\n    if (turnOffLightDebug) log.info(\"Exclude Accessories \" + excAccessories.join(\"- \"));\r\n    const rooms = Hub.getRooms().filter(function loopRooms(room) { return excRooms.indexOf(room.getName()) < 0 });\r\n\r\n    rooms.forEach(function loopRooms(room) {\r\n        var accessories = room.getAccessories().filter(function loopRooms(accessory) { return excAccessories.indexOf(parseInt(accessory.getUUID())) < 0 });\r\n        accessories.forEach(function loopAccessories(accessory) {\r\n            var status = accessory.getService(HS.AccessoryInformation).getCharacteristic(HC.C_Online).getValue();\r\n            if (accessory.getModelId() == \"Sprut.hub\" || status == false) return\r\n\r\n            accessory.getServices().forEach(function loopServices(service) {\r\n                if (service.getType() == HS.Switch || service.getType() == HS.Lightbulb) {\r\n                    var on = service.getCharacteristic(HC.On)\r\n                    if ((service.isVisible() || turnOffHidden) && on.getValue()) {\r\n                        if (turnOffLightDebug) log.info(\"Room \" + room.getName() + \". Accessory \" + accessory.getName() + \". Service \" + accessory.getUUID() + \" \" + service.getName());\r\n                        on.setValue(false)\r\n                    }\r\n                }\r\n            })\r\n        })\r\n    })\r\n}\r\n\r\nfunction getArrayFromValue(value, type) {\r\n    var result = [];\r\n    if (Array.isArray(value)) {\r\n        result = value;\r\n    } else if (typeof value === type) {\r\n        result.push(value);\r\n    }\r\n    return result;\r\n}",
    "type": "GLOBAL"
  }
}