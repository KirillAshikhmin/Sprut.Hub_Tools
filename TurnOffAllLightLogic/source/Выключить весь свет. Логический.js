// –í—ã–Ω–æ—Å–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ info –∏ options
let scenarioName = {
    ru: "üîå –í—ã–∫–ª—é—á–∏—Ç—å –≤–µ—Å—å —Å–≤–µ—Ç",
    en: "üîå Turn off all lights"
};

let scenarioDescription = {
    ru: "–õ–æ–≥–∏—á–µ—Å–∫–∏–π —Å—Ü–µ–Ω–∞—Ä–∏–π –¥–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –≤—Å–µ—Ö –ª–∞–º–ø, –≤—ã–∫–ª—é—á–∞—Ç–µ–ª–µ–π –∏ —Ä–æ–∑–µ—Ç–æ–∫ –≤ –¥–æ–º–µ –ø—Ä–∏ –≤–∫–ª—é—á–µ–Ω–∏–∏ –≤—ã–∫–ª—é—á–∞—Ç–µ–ª—è –∏–ª–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∏.\n\n–û–°–ù–û–í–ù–´–ï –§–£–ù–ö–¶–ò–ò:\n‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ –≤—Å–µ—Ö —Å–≤–µ—Ç–∏–ª—å–Ω–∏–∫–æ–≤ –ø—Ä–∏ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏–∏ —Ç—Ä–∏–≥–≥–µ—Ä–∞\n‚Ä¢ –ì–∏–±–∫–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–∏–ø–∞–º–∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤ (–ª–∞–º–ø–æ—á–∫–∏, –≤—ã–∫–ª—é—á–∞—Ç–µ–ª–∏, —Ä–æ–∑–µ—Ç–∫–∏)\n‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏–π –∫–æ–º–Ω–∞—Ç –∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤\n‚Ä¢ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ –ª—é–±—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤ –ø–æ ID\n‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —á–µ—Ä–µ–∑ –æ–ø—Ü–∏–∏ —Å—Ü–µ–Ω–∞—Ä–∏—è\n‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è —Å–∫—Ä—ã—Ç—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤\n‚Ä¢ –ü–æ–¥—Ä–æ–±–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏\n\n–ü–û–î–î–ï–†–ñ–ò–í–ê–ï–ú–´–ï –°–ï–†–í–ò–°–´:\n‚Ä¢ Switch (–í—ã–∫–ª—é—á–∞—Ç–µ–ª—å) - –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç—Å—è –æ—Ç–¥–µ–ª—å–Ω–æ\n‚Ä¢ Lightbulb (–õ–∞–º–ø–æ—á–∫–∞) - –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç—Å—è –æ—Ç–¥–µ–ª—å–Ω–æ\n‚Ä¢ Outlet (–†–æ–∑–µ—Ç–∫–∞) - –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç—Å—è –æ—Ç–¥–µ–ª—å–Ω–æ\n‚Ä¢ –õ—é–±—ã–µ –¥—Ä—É–≥–∏–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ —á–µ—Ä–µ–∑ –ø–æ–ª–µ '–í—ã–∫–ª—é—á–∏—Ç—å —Ç–∞–∫ –∂–µ'\n\n–¢–†–ò–ì–ì–ï–†–´ –°–†–ê–ë–ê–¢–´–í–ê–ù–ò–Ø:\n‚Ä¢ –í–∫–ª—é—á–µ–Ω–∏–µ –≤—ã–∫–ª—é—á–∞—Ç–µ–ª—è (Switch, On = true)\n‚Ä¢ –ù–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ (StatelessProgrammableSwitch, ProgrammableSwitchEvent = 0)",
    en: "Logical scenario for turning off all lights, switches and outlets in the house when a switch is turned on or a button is pressed.\n\nMAIN FEATURES:\n‚Ä¢ Automatic turning off all lights when trigger is activated\n‚Ä¢ Flexible control of device types (lightbulbs, switches, outlets)\n‚Ä¢ Support for room and device exceptions\n‚Ä¢ Additional turning off any devices by ID\n‚Ä¢ Configuration through scenario options\n‚Ä¢ Support for turning off hidden devices\n‚Ä¢ Detailed logging for debugging\n\nSUPPORTED SERVICES:\n‚Ä¢ Switch (Switch) - configurable separately\n‚Ä¢ Lightbulb (Lightbulb) - configurable separately\n‚Ä¢ Outlet (Outlet) - configurable separately\n‚Ä¢ Any other devices via 'Turn off additional' field\n\nTRIGGERS:\n‚Ä¢ Switch turn on (Switch, On = true)\n‚Ä¢ Button press (StatelessProgrammableSwitch, ProgrammableSwitchEvent = 0)"
};

/*
 * info - –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ, –æ–ø–∏—Å—ã–≤–∞—é—â–µ–µ —Å—Ü–µ–Ω–∞—Ä–∏–π.
 * –°—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è —Ö–∞–±–æ–º –≤ –º–æ–º–µ–Ω—Ç –∑–∞–≥—Ä—É–∑–∫–∏ –∏–ª–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å—Ü–µ–Ω–∞—Ä–∏—è.
 * –í –∫–æ–¥–µ –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ —ç—Ç–æ–º—É –æ–±—ä–µ–∫—Ç—É –∑–∞–ø—Ä–µ—â–µ–Ω–æ, —Å—á–∏—Ç–∞—Ç—å –¥–∞–Ω–Ω—ã–µ —Å –Ω–µ–≥–æ —Ç–æ–∂–µ –Ω–µ –ø–æ–ª—É—á–∏—Ç—Å—è.
 * –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –∑–Ω–∞—á–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–∏—Ö–æ–¥—è—Ç –≤ —Ñ—É–Ω–∫—Ü–∏–∏ compute –∏–ª–∏ trigger.
 */
info = { 
  name: scenarioName.ru, // –ù–∞–∑–≤–∞–Ω–∏–µ —Å—Ü–µ–Ω–∞—Ä–∏—è
  description: scenarioDescription.ru, // –û–ø–∏—Å–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ —Å—Ü–µ–Ω–∞—Ä–∏—è
  version: "1.0", // –ù–æ–º–µ—Ä –≤–µ—Ä—Å–∏–∏ —Å—Ü–µ–Ω–∞—Ä–∏—è
  author: "@BOOMikru", // –ê–≤—Ç–æ—Ä —Å—Ü–µ–Ω–∞—Ä–∏—è
  onStart: false, // –ù–µ –∑–∞–ø—É—Å–∫–∞—Ç—å –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ —Ö–∞–±–∞
  sourceServices: [HS.Switch, HS.StatelessProgrammableSwitch], // –°–ø–∏—Å–æ–∫ —É—Å—Ç—Ä–æ–π—Å—Ç–≤, –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ –∫–æ—Ç–æ—Ä—ã—Ö –±—É–¥–µ—Ç —Ä–µ–∞–≥–∏—Ä–æ–≤–∞—Ç—å —Å—Ü–µ–Ω–∞—Ä–∏–π
  sourceCharacteristics: [HC.On, HC.ProgrammableSwitchEvent], // –°–ø–∏—Å–æ–∫ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫, –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –∫–æ—Ç–æ—Ä—ã—Ö –±—É–¥–µ—Ç —Ä–µ–∞–≥–∏—Ä–æ–≤–∞—Ç—å —Å—Ü–µ–Ω–∞—Ä–∏–π

  // –û–ø—Ü–∏–∏ –¥–ª—è —Å—Ü–µ–Ω–∞—Ä–∏—è. –û—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ —Ö–∞–±–∞ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –ª–æ–≥–∏–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞. 
  // –£ –∫–∞–∂–¥–æ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –æ–ø—Ü–∏–∏ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ.
  options: {
    // –û—Ç–∫–ª—é—á–∞—Ç—å –ª–∞–º–ø–æ—á–∫–∏
    turnOffLightbulbs: { 
      type: "Boolean", 
      value: true,
      name: { ru: "–û—Ç–∫–ª—é—á–∞—Ç—å –ª–∞–º–ø–æ—á–∫–∏", en: "Turn off lightbulbs" }, 
      desc: { ru: "–û—Ç–∫–ª—é—á–∞—Ç—å –ª–∞–º–ø–æ—á–∫–∏", en: "Turn off lightbulbs" } 
    },

    // –û—Ç–∫–ª—é—á–∞—Ç—å –≤—ã–∫–ª—é—á–∞—Ç–µ–ª–∏
    turnOffSwitches: { 
      type: "Boolean", 
      value: true,
      name: { ru: "–û—Ç–∫–ª—é—á–∞—Ç—å –≤—ã–∫–ª—é—á–∞—Ç–µ–ª–∏", en: "Turn off switches" }, 
      desc: { ru: "–û—Ç–∫–ª—é—á–∞—Ç—å –≤—ã–∫–ª—é—á–∞—Ç–µ–ª–∏", en: "Turn off switches" } 
    },

    // –û—Ç–∫–ª—é—á–∞—Ç—å —Ä–æ–∑–µ—Ç–∫–∏
    turnOffOutlets: { 
      type: "Boolean", 
      value: false,
      name: { ru: "–û—Ç–∫–ª—é—á–∞—Ç—å —Ä–æ–∑–µ—Ç–∫–∏", en: "Turn off outlets" }, 
      desc: { ru: "–û—Ç–∫–ª—é—á–∞—Ç—å —Ä–æ–∑–µ—Ç–∫–∏", en: "Turn off outlets" } 
    },

    // –û—Ç–∫–ª—é—á–∞—Ç—å —Å–∫—Ä—ã—Ç—ã–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
    turnOffHidden: { 
      type: "Boolean", 
      value: false,
      name: { ru: "–û—Ç–∫–ª—é—á–∞—Ç—å —Å–∫—Ä—ã—Ç—ã–µ", en: "Turn off hidden" }, 
      desc: { ru: "–û—Ç–∫–ª—é—á–∞—Ç—å —Å–∫—Ä—ã—Ç—ã–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞", en: "Turn off hidden devices" } 
    },

    // –ò—Å–∫–ª—é—á–µ–Ω–∏—è –∫–æ–º–Ω–∞—Ç
    excludeRoomsNames: { 
      type: "String", 
      value: "",
      maxLength: 500,
      name: { ru: "–ö–æ–º–Ω–∞—Ç—ã –∏—Å–∫–ª—é—á–µ–Ω–∏—è", en: "Exclude rooms" }, 
      desc: { ru: "–ù–∞–∑–≤–∞–Ω–∏—è –∫–æ–º–Ω–∞—Ç —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é, –≥–¥–µ –Ω–µ –Ω–∞–¥–æ –≤—ã–∫–ª—é—á–∞—Ç—å —Å–≤–µ—Ç", en: "Room names separated by commas where lights should not be turned off" } 
    },

    // –ò—Å–∫–ª—é—á–µ–Ω–∏—è –∞–∫—Å–µ—Å—Å—É–∞—Ä–æ–≤ –∏ —Å–µ—Ä–≤–∏—Å–æ–≤
    excludeAccessoriesId: { 
      type: "String", 
      value: "",
      maxLength: 500,
      name: { ru: "–£—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏—è", en: "Exclude accessories" }, 
      desc: { ru: "ID —É—Å—Ç—Ä–æ–π—Å—Ç–≤ –∏/–∏–ª–∏ —Å–µ—Ä–≤–∏—Å–æ–≤ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –±—É–¥—É—Ç –æ—Ç–∫–ª—é—á–∞—Ç—å—Å—è (130, 188.15, \"200.13\")", en: "Device and service IDs separated by commas, which will not be turned off (130, 188.15, \"200.13\")" } 
    },

    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –¥–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è
    turnOffAdditionalDevices: { 
      type: "String", 
      value: "",
      maxLength: 500,
      name: { ru: "–í—ã–∫–ª—é—á–∏—Ç—å —Ç–∞–∫ –∂–µ", en: "Turn off additional" }, 
      desc: { ru: "ID —É—Å—Ç—Ä–æ–π—Å—Ç–≤ –∏ —Å–µ—Ä–≤–∏—Å–æ–≤ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é –¥–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –ª—é–±—ã—Ö —Ç–∏–ø–æ–≤ —É—Å—Ç—Ä–æ–π—Å—Ç–≤ (130, 188.15, \"200.13\"). –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Å–µ—Ä–≤–∏—Å—ã: –í—ã–∫–ª—é—á–∞—Ç–µ–ª—å, –õ–∞–º–ø–æ—á–∫–∞, –†–æ–∑–µ—Ç–∫–∞, –í–µ–Ω—Ç–∏–ª—è—Ç–æ—Ä, –û—á–∏—Å—Ç–∏—Ç–µ–ª—å –≤–æ–∑–¥—É—Ö–∞, –ù–∞–≥—Ä–µ–≤–∞—Ç–µ–ª—å, –£–≤–ª–∞–∂–Ω–∏—Ç–µ–ª—å, –¢–µ—Ä–º–æ—Å—Ç–∞—Ç, –î–≤–µ—Ä—å, –ö—Ä–∞–Ω, –ü–æ–ª–∏–≤, –ö—Ä–∞–Ω, –®—Ç–æ—Ä–∞, –î–∏–Ω–∞–º–∏–∫, –ú–∏–∫—Ä–æ—Ñ–æ–Ω, –¢–í –¥–∏–Ω–∞–º–∏–∫ –∏ —Ç.–¥.", en: "Device and service IDs separated by commas to turn off any type of devices (130, 188.15, \"200.13\"). Supported services: Switch, Lightbulb, Outlet, FanBasic, AirPurifier, HeaterCooler, HumidifierDehumidifier, Thermostat, Door, Faucet, IrrigationSystem, Valve, WindowCovering, Speaker, Microphone, TelevisionSpeaker, etc." } 
    },

    // –û—Ç–ª–∞–¥–∫–∞
    turnOffLightDebug: { 
      type: "Boolean", 
      value: false,
      name: { ru: "–û—Ç–ª–∞–¥–∫–∞", en: "Debug" }, 
      desc: { ru: "–ê–∫—Ç–∏–≤–∞—Ü–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏", en: "Enable additional logging for debugging" } 
    }
  },

  variables: {
    // –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è (–ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏)
  }
}

/**
 * –ö–æ–ª–ª–±–µ–∫ —Ñ—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏, –Ω–∞ –∫–æ—Ç–æ—Ä—É—é –ø–æ–¥–ø–∏—Å–∞–Ω —Å—Ü–µ–Ω–∞—Ä–∏–π.
 * –í—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ compute –∏ —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–Ω–∞—á–µ–Ω–∏—è –≤ —Ö–∞–±–µ.
 * –†–∞–±–æ—Ç–∞–µ—Ç –∞—Å—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ.
 * –Ø–≤–ª—è–µ—Ç—Å—è –≥–ª–∞–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–µ–π –∏ —Ç–æ—á–∫–æ–π –≤—Ö–æ–¥–∞ –≤ —Å—Ü–µ–Ω–∞—Ä–∏–∏.
 * @param {Characteristic} source - –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞, –∏–∑–º–µ–Ω–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –∫–æ—Ç–æ—Ä–æ–π –≤—ã–∑–≤–∞–ª–æ –≤—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏
 * @param {*} value - –ù–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
 * @param {Object} variables - –û–±—ä–µ–∫—Ç —Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏ —Å—Ü–µ–Ω–∞—Ä–∏—è –∏–∑ –ø–æ–ª—è variables –±–ª–æ–∫–∞ info. –ó–Ω–∞—á–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–Ω—ã —Ç–æ–ª—å–∫–æ –≤ —Ä–∞–º–∫–∞—Ö —ç—Ç–æ–≥–æ —Å—Ü–µ–Ω–∞—Ä–∏—è, –º–æ–∂–Ω–æ –ø–∏—Å–∞—Ç—å –∏ —á–∏—Ç–∞—Ç—å, —Å–±—Ä–∞—Å—ã–≤–∞—é—Ç—Å—è –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–µ —Ö–∞–±–∞.
 * @param {Object} options - –û–±—ä–µ–∫—Ç —Å –æ–ø—Ü–∏—è–º–∏ —Å—Ü–µ–Ω–∞—Ä–∏—è –∏–∑ –ø–æ–ª—è options –±–ª–æ–∫–∞ info. –¢–æ–ª—å–∫–æ –¥–ª—è —á—Ç–µ–Ω–∏—è.
 * @param {Object} context - –ö–æ–Ω—Ç–µ–∫—Å—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏. –°–æ–¥–µ—Ä–∂–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–º, —á—Ç–æ –≤—ã–∑–≤–∞–ª–æ –≤—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏
 */
function trigger(source, value, variables, options, context) {
  let service = source.getService(); // –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞, –∫ –∫–æ—Ç–æ—Ä–æ–º—É –ø—Ä–∏–≤—è–∑–∞–Ω–∞ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞
  let accessory = service.getAccessory(); // –ü–æ–ª—É—á–µ–Ω–∏–µ –∞–∫—Å–µ—Å—Å—É–∞—Ä–∞
  let serviceType = service.getType(); // –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–∏–ø–∞ —Å–µ—Ä–≤–∏—Å–∞
  let characteristicType = source.getType(); // –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–∏–ø–∞ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –≤–∫–ª—é—á–µ–Ω–∏–µ –≤—ã–∫–ª—é—á–∞—Ç–µ–ª—è –∏–ª–∏ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏
  let shouldTrigger = false;
  
  if (serviceType === HS.Switch && characteristicType === HC.On && value === true) {
    shouldTrigger = true;
  } else if (serviceType === HS.StatelessProgrammableSwitch && characteristicType === HC.ProgrammableSwitchEvent && value === 0) {
    shouldTrigger = true;
  }

  if (!shouldTrigger) {
    return;
  }

  if (options.turnOffLightDebug) {
    console.info("TurnOffAllLight Logic triggered by:", accessory.getName(), "Service:", serviceType, "Characteristic:", characteristicType, "Value:", value);
  }

  // –í—ã–ø–æ–ª–Ω—è–µ–º –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ —Å–≤–µ—Ç–∞
  turnOffLightLogic(options, variables);
}

/**
 * –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è —Å–≤–µ—Ç–∞ —Å –ª–æ–≥–∏–∫–æ–π –∏–∑ –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ —Å—Ü–µ–Ω–∞—Ä–∏—è
 * @param {Object} options - –û–ø—Ü–∏–∏ —Å—Ü–µ–Ω–∞—Ä–∏—è
 * @param {Object} variables - –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏—è
 */
function turnOffLightLogic(options, variables) {
  var excRooms = []
  var excAccessories = []
  var excServices = []

  // –ü–∞—Ä—Å–∏–º –∏—Å–∫–ª—é—á–µ–Ω–∏—è –∫–æ–º–Ω–∞—Ç
  if (options.excludeRoomsNames && options.excludeRoomsNames.trim()) {
    excRooms = options.excludeRoomsNames.split(',').map(function(room) { 
      return room.trim(); 
    });
  }

  // –ü–∞—Ä—Å–∏–º –∏—Å–∫–ª—é—á–µ–Ω–∏—è –∞–∫—Å–µ—Å—Å—É–∞—Ä–æ–≤ –∏ —Å–µ—Ä–≤–∏—Å–æ–≤
  if (options.excludeAccessoriesId && options.excludeAccessoriesId.trim()) {
    var exclusions = parseExclusionsFromString(options.excludeAccessoriesId);
    excAccessories = exclusions.excAccessories;
    excServices = exclusions.excServices;
  }

  // –ü–∞—Ä—Å–∏–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –¥–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è
  var additionalDevices = [];
  if (options.turnOffAdditionalDevices && options.turnOffAdditionalDevices.trim()) {
    var additionalExclusions = parseExclusionsFromString(options.turnOffAdditionalDevices);
    additionalDevices = additionalExclusions.excAccessories.concat(additionalExclusions.excServices);
  }

  if (options.turnOffLightDebug) {
    console.info("Exclude Rooms:", excRooms.join("-"));
    console.info("Exclude Accessories:", excAccessories.join("-"));
    console.info("Exclude Services:", excServices.join("-"));
    console.info("Additional Devices:", additionalDevices.join("-"));
  }
  
  const rooms = Hub.getRooms().filter(function(room) { 
    return excRooms.indexOf(room.getName()) < 0; 
  });

  rooms.forEach(function(room) {
    var accessories = room.getAccessories().filter(function(accessory) { 
      return excAccessories.indexOf(parseInt(accessory.getUUID())) < 0; 
    });
    
    accessories.forEach(function(accessory) {
      var status = accessory.getService(HS.AccessoryInformation).getCharacteristic(HC.C_Online).getValue();
      if (accessory.getModelId() == "Sprut.hub" || status == false) return

      accessory.getServices().forEach(function(service) {
        var serviceType = service.getType();
        var shouldProcess = false;
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø —Å–µ—Ä–≤–∏—Å–∞ –∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –æ–ø—Ü–∏–∏
        if (serviceType == HS.Lightbulb && options.turnOffLightbulbs) {
          shouldProcess = true;
        } else if (serviceType == HS.Switch && options.turnOffSwitches) {
          shouldProcess = true;
        } else if (serviceType == HS.Outlet && options.turnOffOutlets) {
          shouldProcess = true;
        }
        
        if (shouldProcess) {
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∏—Å–∫–ª—é—á–µ–Ω –ª–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Å–µ—Ä–≤–∏—Å
          var serviceId = accessory.getUUID() + "." + service.getUUID();
          if (excServices.indexOf(serviceId) >= 0) {
            if (options.turnOffLightDebug) {
              console.info("Service", serviceId, "is excluded");
            }
            return;
          }
          
          var on = service.getCharacteristic(HC.On)
          if ((service.isVisible() || options.turnOffHidden) && on.getValue()) {
            if (options.turnOffLightDebug) {
              console.info("Room:", room.getName(), "Accessory:", accessory.getName(), "Service:", serviceId, service.getName(), "(Type:", serviceType + ")");
            }
            on.setValue(false)
          }
        }
      })
    })
  })

  // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –¥–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è
  if (additionalDevices.length > 0) {
    turnOffAdditionalDevices(additionalDevices, options);
  }
}

/**
 * –ü–∞—Ä—Å–∏—Ç —Å—Ç—Ä–æ–∫—É —Å –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞–º–∏ –∏—Å–∫–ª—é—á–µ–Ω–∏–π –≤ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–∞—Ö
 * –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç:
 * - –¶–µ–ª—ã–µ —á–∏—Å–ª–∞: 130, 188
 * - –°—Ç—Ä–æ–∫–∏: "130", "188"
 * - –î—Ä–æ–±–Ω—ã–µ —á–∏—Å–ª–∞: 130.13, "130.13" (–∞–∫—Å–µ—Å—Å—É–∞—Ä.—Å–µ—Ä–≤–∏—Å)
 * - –ú–∞—Å—Å–∏–≤—ã: 130, "188", 200.15, "300.20"
 * @param {string} value - –°—Ç—Ä–æ–∫–∞ –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞
 * @returns {Object} –û–±—ä–µ–∫—Ç —Å –º–∞—Å—Å–∏–≤–∞–º–∏ excAccessories –∏ excServices
 */
function parseExclusionsFromString(value) {
  var excAccessories = [];
  var excServices = [];
  
  if (!value || !value.trim()) {
    return { excAccessories: excAccessories, excServices: excServices };
  }
  
  // –†–∞–∑–¥–µ–ª—è–µ–º –ø–æ –∑–∞–ø—è—Ç—ã–º –∏ –æ—á–∏—â–∞–µ–º –æ—Ç –ø—Ä–æ–±–µ–ª–æ–≤
  var items = value.split(',').map(function(item) { 
    return item.trim(); 
  });
  
  items.forEach(function(item) {
    var parsed = parseExclusionItem(item);
    if (parsed.accessoryId !== null) {
      excAccessories.push(parsed.accessoryId);
    }
    if (parsed.serviceId !== null) {
      excServices.push(parsed.serviceId);
    }
  });
  
  return { excAccessories: excAccessories, excServices: excServices };
}

/**
 * –ü–∞—Ä—Å–∏—Ç –æ—Ç–¥–µ–ª—å–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –∏—Å–∫–ª—é—á–µ–Ω–∏—è
 * @param {string} item - –≠–ª–µ–º–µ–Ω—Ç –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞
 * @returns {Object} –û–±—ä–µ–∫—Ç —Å accessoryId –∏ serviceId
 */
function parseExclusionItem(item) {
  var accessoryId = null;
  var serviceId = null;
  
  // –£–±–∏—Ä–∞–µ–º –∫–∞–≤—ã—á–∫–∏ –µ—Å–ª–∏ –µ—Å—Ç—å
  item = item.replace(/^["']|["']$/g, '');
  
  if (item.includes('.')) {
    // –°—Ç—Ä–æ–∫–∞ —Å —Ç–æ—á–∫–æ–π - –∞–∫—Å–µ—Å—Å—É–∞—Ä.—Å–µ—Ä–≤–∏—Å
    var parts = item.split('.');
    accessoryId = parseInt(parts[0]);
    serviceId = parts[1] ? parts[1] : null;
  } else {
    // –°—Ç—Ä–æ–∫–∞ –±–µ–∑ —Ç–æ—á–∫–∏ - —Ç–æ–ª—å–∫–æ –∞–∫—Å–µ—Å—Å—É–∞—Ä
    accessoryId = parseInt(item);
  }
  
  return { accessoryId: accessoryId, serviceId: serviceId };
}

/**
 * –û—Ç–∫–ª—é—á–∞–µ—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –ø–æ –∏—Ö –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞–º
 * 
 * –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ç–∏–ø—ã —Å–µ—Ä–≤–∏—Å–æ–≤:
 * - Switch (–í—ã–∫–ª—é—á–∞—Ç–µ–ª—å)
 * - Lightbulb (–õ–∞–º–ø–æ—á–∫–∞)
 * - Outlet (–†–æ–∑–µ—Ç–∫–∞)
 * - FanBasic (–í–µ–Ω—Ç–∏–ª—è—Ç–æ—Ä –ø—Ä–æ—Å—Ç–æ–π)
 * - AirPurifier (–û—á–∏—Å—Ç–∏—Ç–µ–ª—å –≤–æ–∑–¥—É—Ö–∞)
 * - HeaterCooler (–ù–∞–≥—Ä–µ–≤–∞—Ç–µ–ª—å –æ—Ö–ª–∞–¥–∏—Ç–µ–ª—å)
 * - HumidifierDehumidifier (–£–≤–ª–∞–∂–Ω–∏—Ç–µ–ª—å –æ—Å—É—à–∏—Ç–µ–ª—å)
 * - Thermostat (–¢–µ—Ä–º–æ—Å—Ç–∞—Ç)
 * - Door (–î–≤–µ—Ä—å)
 * - Faucet (–í–æ–¥–æ–ø—Ä–æ–≤–æ–¥–Ω—ã–π –∫—Ä–∞–Ω)
 * - IrrigationSystem (–°–∏—Å—Ç–µ–º–∞ –ø–æ–ª–∏–≤–∞)
 * - Valve (–ö—Ä–∞–Ω)
 * - WindowCovering (–®—Ç–æ—Ä–∞)
 * - Speaker (–î–∏–Ω–∞–º–∏–∫)
 * - Microphone (–ú–∏–∫—Ä–æ—Ñ–æ–Ω)
 * - TelevisionSpeaker (–¢–µ–ª–µ–≤–∏–∑–∏–æ–Ω–Ω—ã–π –¥–∏–Ω–∞–º–∏–∫)
 * 
 * @param {Array} additionalDevices - –ú–∞—Å—Å–∏–≤ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–≤ —É—Å—Ç—Ä–æ–π—Å—Ç–≤ –∏ —Å–µ—Ä–≤–∏—Å–æ–≤
 * @param {Object} options - –û–ø—Ü–∏–∏ —Å—Ü–µ–Ω–∞—Ä–∏—è
 */
function turnOffAdditionalDevices(additionalDevices, options) {
  additionalDevices.forEach(function(deviceId) {
    try {
      if (deviceId.includes('.')) {
        // –≠—Ç–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Å–µ—Ä–≤–∏—Å (–∞–∫—Å–µ—Å—Å—É–∞—Ä.—Å–µ—Ä–≤–∏—Å)
        var parts = deviceId.split('.');
        var accessoryId = parseInt(parts[0]);
        var serviceId = parts[1];
        
        var accessory = Hub.getAccessory(accessoryId);
        if (accessory) {
          var service = accessory.getService(serviceId);
          if (service) {
            turnOffService(service, options);
          } else if (options.turnOffLightDebug) {
            console.warn("Service not found:", serviceId, "in accessory:", accessoryId);
          }
        } else if (options.turnOffLightDebug) {
          console.warn("Accessory not found:", accessoryId);
        }
      } else {
        // –≠—Ç–æ –∞–∫—Å–µ—Å—Å—É–∞—Ä —Ü–µ–ª–∏–∫–æ–º
        var accessoryId = parseInt(deviceId);
        var accessory = Hub.getAccessory(accessoryId);
        if (accessory) {
          var services = accessory.getServices();
          services.forEach(function(service) {
            turnOffService(service, options);
          });
        } else if (options.turnOffLightDebug) {
          console.warn("Accessory not found:", accessoryId);
        }
      }
    } catch (e) {
      if (options.turnOffLightDebug) {
        console.error("Error processing device:", deviceId, "Error:", e.message);
      }
    }
  });
}

/**
 * –û—Ç–∫–ª—é—á–∞–µ—Ç —Å–µ—Ä–≤–∏—Å, –∏—â–∞ –≤—Å–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –¥–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è
 * 
 * –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –∏ —Å–µ—Ä–≤–∏—Å—ã:
 * - HC.On (false) - Switch, Lightbulb, Outlet, FanBasic
 * - HC.Active (0) - AirPurifier, HeaterCooler, HumidifierDehumidifier, Door, Faucet, IrrigationSystem, Valve, WindowCovering
 * - HC.TargetHeatingCoolingState (0) - Thermostat
 * - HC.TargetHeaterCoolerState (0) - HeaterCooler
 * - HC.TargetAirPurifierState (0) - AirPurifier
 * - HC.TargetHumidifierDehumidifierState (0) - HumidifierDehumidifier
 * - HC.TargetDoorState (0) - Door
 * - HC.TargetPosition (0) - Door, Faucet, IrrigationSystem, Valve, WindowCovering
 * - HC.Mute (true) - Speaker, Microphone, TelevisionSpeaker
 * 
 * @param {Service} service - –°–µ—Ä–≤–∏—Å –¥–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è
 * @param {Object} options - –û–ø—Ü–∏–∏ —Å—Ü–µ–Ω–∞—Ä–∏—è
 */
function turnOffService(service, options) {
  var accessory = service.getAccessory();
  
  // –°–ø–∏—Å–æ–∫ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ –¥–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è —Å –∏—Ö –∑–Ω–∞—á–µ–Ω–∏—è–º–∏
  var turnOffCharacteristics = [
    { type: HC.On, value: false, name: "On" },
    { type: HC.Active, value: 0, name: "Active" },
    { type: HC.TargetHeatingCoolingState, value: 0, name: "TargetHeatingCoolingState" }, // Off
    { type: HC.TargetHeaterCoolerState, value: 0, name: "TargetHeaterCoolerState" }, // Off
    { type: HC.TargetAirPurifierState, value: 0, name: "TargetAirPurifierState" }, // Off
    { type: HC.TargetHumidifierDehumidifierState, value: 0, name: "TargetHumidifierDehumidifierState" }, // Off
    { type: HC.TargetDoorState, value: 0, name: "TargetDoorState" }, // Open
    { type: HC.TargetPosition, value: 0, name: "TargetPosition" }, // 0%
    { type: HC.Mute, value: true, name: "Mute" }, // Mute
  ];

  var turnedOffCount = 0;
  
  turnOffCharacteristics.forEach(function(charConfig) {
    try {
      var characteristic = service.getCharacteristic(charConfig.type);
      if (characteristic) {
        var currentValue = characteristic.getValue();
        if (currentValue !== charConfig.value) {
          characteristic.setValue(charConfig.value);
          turnedOffCount++;
          
          if (options.turnOffLightDebug) {
            console.info("Turned off", charConfig.name, "in", accessory.getName(), "service", service.getName(), "from", currentValue, "to", charConfig.value);
          }
        }
      }
    } catch (e) {
      // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –¥–ª—è —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Å–µ—Ä–≤–∏—Å–æ–º
      if (options.turnOffLightDebug) {
        console.debug("Characteristic", charConfig.name, "not supported in service", service.getName());
      }
    }
  });

  if (options.turnOffLightDebug && turnedOffCount > 0) {
    console.info("Turned off", turnedOffCount, "characteristics in", accessory.getName(), "service", service.getName());
  }
}

