{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": {
    "link": {
      "type": "object",
      "properties": {
        "scale": {
          "type": "number"
        },
        "events": {
          "type": "boolean"
        },
        "data": {
          "type": "string"
        },
        "map": {
          "type": "object",
          "patternProperties": {
            ".*": {
              "type": [
                "boolean",
                "number",
                "integer",
                "string",
                "object"
              ]
            }
          }
        },
        "outMap": {
          "type": "object",
          "patternProperties": {
            ".*": {
              "type": [
                "boolean",
                "number",
                "integer",
                "string",
                "object"
              ]
            }
          }
        },
        "setProp": {
          "type": "string"
        },
        "getProp": {
          "type": "string"
        },
        "inFunc": {
          "type": "string"
        },
        "outFunc": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "action": {
          "type": "string"
        },
        "in": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "Integer",
            "String",
            "Boolean",
            "Double",
            "Long",
            "Color",
            "HSV",
            "RGB"
          ],
          "additionalItems": false,
          "additionalProperties": false
        },
        "subType": {
          "type": "string"
        },
        "topicGet": {
          "type": "string"
        },
        "topicSet": {
          "type": "string"
        },
        "checkValue": {
          "type": "boolean"
        },
        "minValue": {
          "type": "integer"
        },
        "maxValue": {
          "type": "integer"
        },
        "minStep": {
          "type": "number"
        },
        "format": {
          "type": "string",
          "enum": [
            "HSV",
            "RGB",
            "RGBW",
            "DEC",
            "RRGGBB",
            "#RRGGBB",
            "WWRRGGBB",
            "#WWRRGGBB",
            "RRGGBBWW",
            "#RRGGBBWW",
            "WBCovering"
          ]
        },
        "getBLE": {
          "type": "string"
        },
        "getStatus": {
          "type": "string"
        },
        "set": {
          "type": "object",
          "patternProperties": {
            "method": {
              "type": "string"
            },
            "param": {
              "type": "string"
            },
            ".*": {
              "type": [
                "boolean",
                "number",
                "integer",
                "string",
                "object"
              ]
            }
          },
          "additionalProperties": false,
          "required": [
            "method",
            "param"
          ]
        },
        "get": {
          "type": "object",
          "patternProperties": {
            "method": {
              "type": "string"
            },
            "param": {
              "type": "string"
            },
            ".*": {
              "type": [
                "boolean",
                "number",
                "integer",
                "string",
                "object"
              ]
            }
          },
          "additionalProperties": false,
          "required": [
            "method",
            "param"
          ]
        },
        "getMethod": {
          "type": "string"
        },
        "setMethod": {
          "type": "string"
        },
        "getCommand": {
          "type": "string"
        },
        "setCommand": {
          "type": "string"
        },
        "endpoint": {
          "type": "integer"
        },
        "cluster": {
          "type": "string",
          "pattern": "^[0-9A-Fa-f]{3,4}_[A-Za-z0-9_.-]+$"
        },
        "attribute": {
          "type": [
            "string",
            "array"
          ],
          "items": {
            "type": "string",
            "pattern": "^[0-9]{3,}_[A-Za-z0-9_]+$"
          }
        },
        "command": {
          "type": "string"
        },
        "sendCommand": {
          "type": "boolean"
        },
        "source": {
          "type": "boolean"
        },
        "group": {
          "type": "integer"
        },
        "manufacturerCode": {
          "type": "integer"
        },
        "param": {
          "type": [
            "boolean",
            "number",
            "integer",
            "string",
            "object"
          ]
        },
        "output": {
          "type": "boolean"
        },
        "extAttribute": {
          "type": "string"
        },
        "ClusterSpecificCommand": {
          "type": "boolean"
        },
        "frameType": {
          "type": "integer"
        },
        "waitResponse": {
          "type": "boolean"
        },
        "read": {
          "type": "boolean",
          "default": false
        },
        "write": {
          "type": "boolean",
          "default": false
        },
        "value": {
          "type": "string"
        },
        "address": {
          "type": [
            "integer",
            "string"
          ]
        },
        "function": {
          "type": "string"
        },
        "pollingTime": {
          "type": "integer"
        },
        "length": {
          "type": "integer"
        },
        "byteOrder": {
          "type": "string"
        },
        "class": {
          "type": "string"
        },
        "delimiter": {
          "type": "string"
        },
        "bitmask": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      },
      "dependencies": {
        "id": [
          "type"
        ],
        "set": [
          "type"
        ],
        "in": [
          "action"
        ],
        "getProp": [
          "type"
        ],
        "setProp": [
          "type"
        ],
        "getBLE": [
          "type"
        ],
        "getStatus": [
          "type"
        ],
        "topicGet": [
          "type"
        ]
      },
      "additionalProperties": false,
      "additionalItems": false
    },
    "optional": {
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "link": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/link"
              }
            },
            "value": {
              "type": "string"
            }
          },
          "required": [
            "value"
          ],
          "additionalProperties": false
        },
        {
          "type": "boolean"
        }
      ]
    },
    "logics": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "LowBatteryFromCurrentLevel",
            "FilterChangeIndicationFromFilterLifeLevel",
            "AirQualityFromAQIDensity",
            "AirQualityFromFormaldehydeDensity",
            "AirQualityFromPM10Density",
            "AirQualityFromPM2_5Density",
            "AirQualityFromVOCDensity",
            "CarbonDioxideDetectedFromCarbonDioxideLevel",
            "CurrentDoorStateFromTarget",
            "TimerBasedPositionState",
            "TimerBasedDoorState",
            "VirtualButton",
            "CurrentHeaterCoolerFromTarget",
            "CurrentHeatingCoolingFromTarget",
            "CurrentLockStateFromTarget",
            "CurrentPositionFromTarget",
            "CurrentPositionFromPositionState",
            "TargetPositionFromCurrent",
            "CurrentSecurityStateFromTarget",
            "IncrementByIncomingValue",
            "InUseFromActive",
            "GenericThermostat",
            "GenericHeaterCooler",
            "GenericHumidifierDehumidifier",
            "MotionDetectedFromCurrentMotionLevel",
            "SpeedControlledFan",
            "NoiseDetectedFromCurrentNoiseLevel",
            "LightbulbControl"
          ]
        },
        "active": {
          "type": "boolean"
        },
        "options": {
          "type": "object",
          "properties": {
            "WarmingUpTime": {
              "type": "string"
            },
            "MovingTime": {
              "type": "string"
            },
            "DoubleClickTime": {
              "type": "integer"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false,
      "required": [
        "type"
      ]
    },
    "data": {
      "type": "object",
      "properties": {
        "SwitchOffTime": {
          "type": "number"
        },
        "SwitchOffDelay": {
          "type": "number"
        },
        "Inversed": {
          "type": "boolean"
        },
        "ShowAllEvents": {
          "type": "boolean"
        },
        "Offset": {
          "type": "number"
        },
        "LastValue": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "characteristic": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "validValues": {
          "type": "string",
          "pattern": "^[-A-Za-z0-9_, ]+$"
        },
        "minValue": {
          "type": "number"
        },
        "maxValue": {
          "type": "number"
        },
        "minStep": {
          "type": "number"
        },
        "read": {
          "type": "boolean",
          "default": false
        },
        "write": {
          "type": "boolean",
          "default": false
        },
        "optional": {
          "type": "boolean",
          "default": true
        },
        "version": {
          "type": "string"
        },
        "visible": {
          "type": "boolean",
          "default": false
        },
        "option": {
          "type": "boolean",
          "default": true,
          "description": "hide characteristic if true"
        },
        "value": {
          "type": [
            "boolean",
            "number",
            "integer",
            "string"
          ]
        },
        "data": {
          "$ref": "#/definitions/data"
        },
        "link": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/link"
          }
        },
        "unit": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "values": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "value": {
                "type": [
                  "string",
                  "number",
                  "boolean"
                ]
              },
              "name": {
                "type": "string"
              },
              "description": {
                "type": "string"
              }
            },
            "required": [
              "value",
              "name"
            ],
            "additionalProperties": false
          }
        },
        "init": {
          "type": "boolean",
          "enum": [
            true
          ],
          "default": true
        },
        "inputType": {
          "type": "string",
          "enum": [
            "GROUP",
            "FOLDER",
            "BUTTON",
            "NUMBER",
            "TEXT",
            "PASSWORD",
            "CHECKBOX",
            "STATUS",
            "URL",
            "INFO",
            "EMAIL",
            "HTML",
            "IP_ADDR",
            "PINCODE",
            "QR_CODE",
            "LIST"
          ]
        },
        "type": {
          "type": "string",
          "enum": [
            "AccessoryFlags",
            "Active",
            "ActiveIdentifier",
            "AdministratorOnlyAccess",
            "AudioFeedback",
            "AirParticulateDensity",
            "AirParticulateSize",
            "AirQuality",
            "BatteryLevel",
            "Brightness",
            "ButtonEvent",
            "CarbonMonoxideLevel",
            "CarbonMonoxidePeakLevel",
            "CarbonDioxideDetected",
            "CarbonDioxideLevel",
            "CarbonDioxidePeakLevel",
            "CarbonMonoxideDetected",
            "ChargingState",
            "CoolingThresholdTemperature",
            "ColorTemperature",
            "ContactSensorState",
            "CurrentAmbientLightLevel",
            "CurrentHorizontalTiltAngle",
            "CurrentAirPurifierState",
            "CurrentSlatState",
            "CurrentPosition",
            "CurrentVerticalTiltAngle",
            "CurrentHumidifierDehumidifierState",
            "CurrentDoorState",
            "CurrentFanState",
            "CurrentHeatingCoolingState",
            "CurrentHeaterCoolerState",
            "CurrentRelativeHumidity",
            "CurrentTemperature",
            "CurrentTiltAngle",
            "DigitalZoom",
            "FilterLifeLevel",
            "FilterChangeIndication",
            "FirmwareRevision",
            "HardwareRevision",
            "SoftwareRevision",
            "HeatingThresholdTemperature",
            "HoldPosition",
            "Hue",
            "Identify",
            "ImageRotation",
            "ImageMirroring",
            "InUse",
            "IsConfigured",
            "LeakDetected",
            "LockControlPoint",
            "LockCurrentState",
            "LockLastKnownAction",
            "LockManagementAutoSecurityTimeout",
            "LockPhysicalControls",
            "LockTargetState",
            "Logs",
            "Manufacturer",
            "Model",
            "MotionDetected",
            "Mute",
            "Name",
            "NightVision",
            "NitrogenDioxideDensity",
            "ObstructionDetected",
            "PM2_5Density",
            "OccupancyDetected",
            "OpticalZoom",
            "OutletInUse",
            "On",
            "OzoneDensity",
            "PM10Density",
            "PositionState",
            "ProgramMode",
            "ProgrammableSwitchEvent",
            "RelativeHumidityDehumidifierThreshold",
            "RelativeHumidityHumidifierThreshold",
            "RemainingDuration",
            "ResetFilterIndication",
            "RotationDirection",
            "RotationSpeed",
            "Saturation",
            "SecuritySystemAlarmType",
            "SecuritySystemCurrentState",
            "SecuritySystemTargetState",
            "SelectedAudioStreamConfiguration",
            "SelectedRTPStreamConfiguration",
            "SerialNumber",
            "ServiceLabelIndex",
            "ServiceLabelNamespace",
            "SetupDataStreamTransport",
            "SetupEndpoints",
            "SiriInputType",
            "SlatType",
            "SmokeDetected",
            "StatusActive",
            "StatusFault",
            "StatusJammed",
            "StatusLowBattery",
            "StatusTampered",
            "StreamingStatus",
            "SupportedAudioStreamConfiguration",
            "SupportedDataStreamTransportConfiguration",
            "SupportedRTPConfiguration",
            "SupportedVideoStreamConfiguration",
            "SulphurDioxideDensity",
            "SwingMode",
            "TargetAirPurifierState",
            "TargetFanState",
            "TargetTiltAngle",
            "SetDuration",
            "TargetControlSupportedConfiguration",
            "TargetControlList",
            "TargetHorizontalTiltAngle",
            "TargetHeaterCoolerState",
            "TargetHumidifierDehumidifierState",
            "TargetPosition",
            "TargetDoorState",
            "TargetHeatingCoolingState",
            "TargetRelativeHumidity",
            "TargetTemperature",
            "TemperatureDisplayUnits",
            "TargetVerticalTiltAngle",
            "ValveType",
            "Version",
            "VOCDensity",
            "Volume",
            "WaterLevel",
            "CurrentMediaState",
            "RemoteKey",
            "PictureMode",
            "ConfiguredName",
            "PasswordSetting",
            "AccessControlLevel",
            "Identifier",
            "SleepDiscoveryMode",
            "VolumeControlType",
            "VolumeSelector",
            "InputSourceType",
            "InputDeviceType",
            "ClosedCaptions",
            "PowerModeSelection",
            "TargetVisibilityState",
            "CurrentVisibilityState",
            "DisplayOrder",
            "TargetMediaState",
            "DataStreamHAPTransport",
            "DataStreamHAPTransportInterrupt",
            "RelayControlPoint",
            "RelayEnabled",
            "RelayState",
            "AppMatchingIdentifier",
            "CharacteristicValueTransitionControl",
            "SupportedCharacteristicValueTransitionConfiguration",
            "SetupTransferTransport",
            "SupportedTransferTransportConfiguration",
            "SupportedCameraRecordingConfiguration",
            "SupportedVideoRecordingConfiguration",
            "SupportedAudioRecordingConfiguration",
            "SelectedCameraRecordingConfiguration",
            "NetworkClientProfileControl",
            "NetworkClientStatusControl",
            "RouterStatus",
            "SupportedRouterConfiguration",
            "WANConfigurationList",
            "WANStatusList",
            "ManagedNetworkEnable",
            "HomeKitCameraActive",
            "ThirdPartyCameraActive",
            "CameraOperatingModeIndicator",
            "WiFiSatelliteStatus",
            "NetworkAccessViolationControl",
            "ProductData",
            "WakeConfiguration",
            "EventSnapshotsActive",
            "DiagonalFieldOfView",
            "PeriodicSnapshotsActive",
            "RecordingAudioActive",
            "ManuallyDisabled",
            "VideoAnalysisActive",
            "CurrentTransport",
            "WiFiCapabilities",
            "WiFiConfigurationControl",
            "OperatingStateResponse",
            "SupportedFirmwareUpdateConfiguration",
            "FirmwareUpdateReadiness",
            "FirmwareUpdateStatus",
            "SupportedDiagnosticsSnapshot",
            "Ping",
            "EventRetransmissionMaximum",
            "EventTransmissionCounters",
            "ReceivedSignalStrengthIndication",
            "SignalToNoiseRatio",
            "TransmitPower",
            "MaximumTransmitPower",
            "ReceiverSensitivity",
            "CCASignalDetectThreshold",
            "CCAEnergyDetectThreshold",
            "MACRetransmissionMaximum",
            "MACTransmissionCounters",
            "CharacteristicValueActiveTransitionCount",
            "ThreadNodeCapabilities",
            "ThreadStatus",
            "ThreadControlPoint",
            "ThreadOpenThreadVersion",
            "PairSetup",
            "PairVerify",
            "PairingFeatures",
            "PairingPairings",
            "C_Room",
            "C_CurrentAtmosphericPressure",
            "C_CurrentNoiseLevel",
            "C_NoiseDetected",
            "C_Volt",
            "C_Ampere",
            "C_Watt",
            "C_VoltAmpere",
            "C_KiloWattHour",
            "C_KiloVoltAmpereHour",
            "C_CurrentUltraviolet",
            "C_TargetPositionState",
            "C_VisibleInRoom",
            "C_Favorite",
            "C_Sequence",
            "C_CurrentMotionLevel",
            "C_PulseCount",
            "C_Status",
            "C_CubicMeter",
            "C_Angle",
            "C_Frequency",
            "C_VoltAmpereReactive",
            "C_KiloVoltAmpereReactiveHour",
            "C_PowerFactor",
            "C_FanSpeed",
            "C_FormaldehydeDensity",
            "C_AQIDensity",
            "C_Revision",
            "C_TimeZone",
            "C_Language",
            "C_Endpoint",
            "C_GasDetected",
            "C_LowExplosionLevel",
            "C_DecibelMilliWatts",
            "C_GasType",
            "C_Distance",
            "C_Intensity",
            "C_PM1_0Density",
            "C_GigaCalorie",
            "C_Scan",
            "C_Receive",
            "C_Transmit",
            "C_Online",
            "C_Integer",
            "C_Double",
            "C_Boolean",
            "C_String",
            "Integer",
            "String",
            "Boolean",
            "Double",
            "Long",
            "Color",
            "HSV",
            "RGB",
            "GenericBase64Tlv8",
            "GenericBoolean",
            "GenericDouble",
            "GenericInteger",
            "GenericString",
            "GenericLong",
            "C_CatalogId",
            "C_Long"
          ]
        },
        "options": {
          "type": "array"
        },
        "radix": {
          "type": "integer"
        },
        "overview": {
          "type": "string"
        },
        "bitmask": {
          "type": "string"
        },
        "size": {
          "type": "integer"
        },
        "id": {
          "type": "integer"
        }
      },
      "additionalProperties": false,
      "required": [
        "type"
      ],
      "dependencies": {
        "values": [
          "value"
        ]
      }
    },
    "enum_CFanSpeed": {
      "propertyNames": {
        "enum": [
          "AUTO",
          "QUIET",
          "LOW",
          "MEDIUM",
          "HIGH",
          "TURBO",
          "0",
          "1",
          "2",
          "3",
          "4",
          "5"
        ]
      }
    },
    "enum_TargetHeatingCoolingState": {
      "propertyNames": {
        "enum": [
          "ECO",
          "-3",
          "DRY",
          "-2",
          "FAN_ONLY",
          "-1",
          "OFF",
          "0",
          "HEAT",
          "1",
          "COOL",
          "2",
          "AUTO",
          "3",
          "LAST_VALUE",
          "permadm"
        ]
      }
    },
    "enum_ProgrammableSwitchEvent": {
      "propertyNames": {
        "enum": [
          "SINGLE_PRESS",
          "0",
          "DOUBLE_PRESS",
          "1",
          "LONG_PRESS",
          "2",
          "-1"
        ]
      }
    },
    "enum_LockLastKnownAction": {
      "propertyNames": {
        "enum": [
          "SECURED_PHYSICALLY_INTERIOR",
          "0",
          "UNSECURED_PHYSICALLY_INTERIOR",
          "1",
          "SECURED_PHYSICALLY_EXTERIOR",
          "2",
          "UNSECURED_PHYSICALLY_EXTERIOR",
          "3",
          "SECURED_BY_KEYPAD",
          "4",
          "UNSECURED_BY_KEYPAD",
          "5",
          "SECURED_REMOTELY",
          "6",
          "UNSECURED_REMOTELY",
          "7",
          "SECURED_BY_AUTO_SECURE_TIMEOUT",
          "8",
          "SECURED_PHYSICALLY",
          "9",
          "UNSECURED_PHYSICALLY",
          "10"
        ]
      }
    },
    "enum_DisableEnable": {
      "propertyNames": {
        "enum": [
          "DISABLE",
          "0",
          "ENABLE",
          "1"
        ]
      }
    },
    "enum_OffOn": {
      "propertyNames": {
        "enum": [
          "OFF",
          "0",
          "ON",
          "1"
        ]
      }
    },
    "enum_InactiveActive": {
      "propertyNames": {
        "enum": [
          "INACTIVE",
          "0",
          "ACTIVE",
          "1",
          "NONE",
          "permadm",
          "permadm1",
          "permadm2",
          "permadm3"
        ]
      }
    },
    "enum_NormalAbnormal": {
      "propertyNames": {
        "enum": [
          "NORMAL",
          "0",
          "ABNORMAL",
          "1"
        ]
      }
    },
    "enum_NoFaultGeneralFault": {
      "propertyNames": {
        "enum": [
          "NO_FAULT",
          "0",
          "GENERAL_FAULT",
          "1"
        ]
      }
    },
    "enum_NotConfiguredConfigured": {
      "propertyNames": {
        "enum": [
          "NOT_CONFIGURED",
          "0",
          "CONFIGURED",
          "1"
        ]
      }
    },
    "enum_DisabledEnabled": {
      "propertyNames": {
        "enum": [
          "DISABLED",
          "0",
          "ENABLED",
          "1"
        ]
      }
    },
    "enum_ReadyNotReady": {
      "propertyNames": {
        "enum": [
          "READY",
          "0",
          "NOT_READY",
          "1"
        ]
      }
    },
    "enum_UnknownConnectedNotConnected": {
      "propertyNames": {
        "enum": [
          "UNKNOWN",
          "0",
          "CONNECTED",
          "1",
          "NOT_CONNECTED",
          "2"
        ]
      }
    },
    "enum_NotChargingChargingNotChargeable": {
      "propertyNames": {
        "enum": [
          "NOT_CHARGING",
          "0",
          "CHARGING",
          "1",
          "NOT_CHARGEABLE",
          "2"
        ]
      }
    },
    "enum_BatteryNormalLow": {
      "propertyNames": {
        "enum": [
          "BATTERY_LEVEL_NORMAL",
          "0",
          "BATTERY_LEVEL_LOW",
          "1"
        ]
      }
    },
    "enum_InactiveIdleBlowing": {
      "propertyNames": {
        "enum": [
          "INACTIVE",
          "0",
          "IDLE",
          "1",
          "BLOWING_AIR",
          "2"
        ]
      }
    },
    "enum_ManualAuto": {
      "propertyNames": {
        "enum": [
          "MANUAL",
          "0",
          "AUTO",
          "1"
        ]
      }
    },
    "enum_ClockwiseCounter": {
      "propertyNames": {
        "enum": [
          "CLOCKWISE",
          "0",
          "COUNTER_CLOCKWISE",
          "1"
        ]
      }
    },
    "enum_SwingModes": {
      "propertyNames": {
        "enum": [
          "SWING_HORIZONTAL",
          "-2",
          "SWING_VERTICAL",
          "-1",
          "SWING_DISABLED",
          "0",
          "SWING_ENABLED",
          "1"
        ]
      }
    },
    "enum_ControlLock": {
      "propertyNames": {
        "enum": [
          "CONTROL_LOCK_DISABLED",
          "0",
          "CONTROL_LOCK_ENABLED",
          "1"
        ]
      }
    },
    "enum_DoorStates": {
      "propertyNames": {
        "enum": [
          "OPEN",
          "0",
          "CLOSED",
          "1",
          "OPENING",
          "2",
          "CLOSING",
          "3",
          "STOPPED",
          "4"
        ]
      }
    },
    "enum_DoorTarget": {
      "propertyNames": {
        "enum": [
          "OPEN",
          "0",
          "CLOSED",
          "1"
        ]
      }
    },
    "enum_LockStates": {
      "propertyNames": {
        "enum": [
          "UNSECURED",
          "0",
          "SECURED",
          "1",
          "JAMMED",
          "2",
          "UNKNOWN",
          "3"
        ]
      }
    },
    "enum_LockTarget": {
      "propertyNames": {
        "enum": [
          "UNSECURED",
          "0",
          "SECURED",
          "1"
        ]
      }
    },
    "enum_NotTamperedTampered": {
      "propertyNames": {
        "enum": [
          "NOT_TAMPERED",
          "0",
          "TAMPERED",
          "1"
        ]
      }
    },
    "enum_SmokeNotDetectedDetected": {
      "propertyNames": {
        "enum": [
          "SMOKE_NOT_DETECTED",
          "0",
          "SMOKE_DETECTED",
          "1"
        ]
      }
    },
    "enum_GasTypes": {
      "propertyNames": {
        "enum": [
          "METHANE",
          "0",
          "PROPANE",
          "1",
          "CARBON_MONOXIDE",
          "2",
          "CARBON_DIOXIDE",
          "3"
        ]
      }
    },
    "enum_ContactDetectedNotDetected": {
      "propertyNames": {
        "enum": [
          "CONTACT_DETECTED",
          "0",
          "CONTACT_NOT_DETECTED",
          "1"
        ]
      }
    },
    "enum_AirQuality": {
      "propertyNames": {
        "enum": [
          "UNKNOWN",
          "0",
          "EXCELLENT",
          "1",
          "GOOD",
          "2",
          "FAIR",
          "3",
          "INFERIOR",
          "4",
          "POOR",
          "5"
        ]
      }
    },
    "enum_OccupancyNotDetectedDetected": {
      "propertyNames": {
        "enum": [
          "OCCUPANCY_NOT_DETECTED",
          "0",
          "OCCUPANCY_DETECTED",
          "1"
        ]
      }
    },
    "enum_LeakNotDetectedDetected": {
      "propertyNames": {
        "enum": [
          "LEAK_NOT_DETECTED",
          "0",
          "LEAK_DETECTED",
          "1"
        ]
      }
    },
    "enum_PositionStates": {
      "propertyNames": {
        "enum": [
          "DECREASING",
          "0",
          "INCREASING",
          "1",
          "STOPPED",
          "2"
        ]
      }
    },
    "enum_SlatStates": {
      "propertyNames": {
        "enum": [
          "FIXED",
          "0",
          "JAMMED",
          "1",
          "SWINGING",
          "2"
        ]
      }
    },
    "enum_SlatTypes": {
      "propertyNames": {
        "enum": [
          "HORIZONTAL",
          "0",
          "VERTICAL",
          "1"
        ]
      }
    },
    "enum_SwitchEvents": {
      "propertyNames": {
        "enum": [
          "SINGLE_PRESS",
          "0",
          "DOUBLE_PRESS",
          "1",
          "LONG_PRESS",
          "2"
        ]
      }
    },
    "enum_InUseNotInUse": {
      "propertyNames": {
        "enum": [
          "NOT_IN_USE",
          "0",
          "IN_USE",
          "1"
        ]
      }
    },
    "enum_ValveTypes": {
      "propertyNames": {
        "enum": [
          "GENERIC_VALVE",
          "0",
          "IRRIGATION",
          "1",
          "SHOWER_HEAD",
          "2",
          "WATER_FAUCET",
          "3"
        ]
      }
    },
    "enum_HeaterCoolerStates": {
      "propertyNames": {
        "enum": [
          "INACTIVE",
          "0",
          "IDLE",
          "1",
          "HEATING",
          "2",
          "COOLING",
          "3"
        ]
      }
    },
    "enum_HeaterCoolerTarget": {
      "propertyNames": {
        "enum": [
          "AUTO",
          "0",
          "HEAT",
          "1",
          "COOL",
          "2"
        ]
      }
    },
    "enum_TemperatureUnits": {
      "propertyNames": {
        "enum": [
          "CELSIUS",
          "0",
          "FAHRENHEIT",
          "1"
        ]
      }
    },
    "enum_ServiceLabelNamespace": {
      "propertyNames": {
        "enum": [
          "DOTS",
          "0",
          "ARABIC_NUMERALS",
          "1"
        ]
      }
    },
    "enum_FilterChange": {
      "propertyNames": {
        "enum": [
          "FILTER_OK",
          "0",
          "CHANGE_FILTER",
          "1"
        ]
      }
    },
    "enum_TargetPositionState": {
      "propertyNames": {
        "enum": [
          "CLOSE",
          "0",
          "OPEN",
          "1",
          "STOP",
          "2"
        ]
      }
    },
    "enum_AirPurifierStates": {
      "propertyNames": {
        "enum": [
          "INACTIVE",
          "0",
          "IDLE",
          "1",
          "PURIFYING_AIR",
          "2"
        ]
      }
    },
    "enum_SecurityCurrent": {
      "propertyNames": {
        "enum": [
          "STAY_ARM",
          "0",
          "AWAY_ARM",
          "1",
          "NIGHT_ARM",
          "2",
          "DISARMED",
          "3",
          "ALARM_TRIGGERED",
          "4"
        ]
      }
    },
    "enum_SecurityTarget": {
      "propertyNames": {
        "enum": [
          "STAY_ARM",
          "0",
          "AWAY_ARM",
          "1",
          "NIGHT_ARM",
          "2",
          "DISARM",
          "3"
        ]
      }
    },
    "enum_ProgramMode": {
      "propertyNames": {
        "enum": [
          "NO_PROGRAM_SCHEDULED",
          "0",
          "PROGRAM_SCHEDULED",
          "1",
          "PROGRAM_SCHEDULED_MANUAL_MODE",
          "2"
        ]
      }
    },
    "enum_VolumeControlType": {
      "propertyNames": {
        "enum": [
          "NONE",
          "0",
          "RELATIVE",
          "1",
          "RELATIVE_WITH_CURRENT",
          "2",
          "ABSOLUTE",
          "3"
        ]
      }
    },
    "enum_VolumeSelector": {
      "propertyNames": {
        "enum": [
          "INCREMENT",
          "0",
          "DECREMENT",
          "1"
        ]
      }
    },
    "enum_RemoteKeys": {
      "propertyNames": {
        "enum": [
          "REWIND",
          "0",
          "FAST_FORWARD",
          "1",
          "NEXT_TRACK",
          "2",
          "PREVIOUS_TRACK",
          "3",
          "ARROW_UP",
          "4",
          "ARROW_DOWN",
          "5",
          "ARROW_LEFT",
          "6",
          "ARROW_RIGHT",
          "7",
          "SELECT",
          "8",
          "BACK",
          "9",
          "EXIT",
          "10",
          "PLAY_PAUSE",
          "11",
          "INFORMATION",
          "15"
        ]
      }
    },
    "enum_SleepDiscovery": {
      "propertyNames": {
        "enum": [
          "NOT_DISCOVERABLE",
          "0",
          "ALWAYS_DISCOVERABLE",
          "1"
        ]
      }
    },
    "enum_MediaStates": {
      "propertyNames": {
        "enum": [
          "PLAY",
          "0",
          "PAUSE",
          "1",
          "STOP",
          "2",
          "LOADING",
          "4",
          "INTERRUPTED",
          "5"
        ]
      }
    },
    "enum_MediaTarget": {
      "propertyNames": {
        "enum": [
          "PLAY",
          "0",
          "PAUSE",
          "1",
          "STOP",
          "2"
        ]
      }
    },
    "enum_PictureModes": {
      "propertyNames": {
        "enum": [
          "OTHER",
          "0",
          "STANDARD",
          "1",
          "CALIBRATED",
          "2",
          "CALIBRATED_DARK",
          "3",
          "VIVID",
          "4",
          "GAME",
          "5",
          "COMPUTER",
          "6",
          "CUSTOM",
          "7"
        ]
      }
    },
    "enum_ShowHide": {
      "propertyNames": {
        "enum": [
          "SHOW",
          "0",
          "HIDE",
          "1"
        ]
      }
    },
    "enum_HeatingCooling": {
      "propertyNames": {
        "enum": [
          "OFF",
          "0",
          "HEAT",
          "1",
          "COOL",
          "2"
        ]
      }
    },
    "enum_HumidifierDehumidifier": {
      "propertyNames": {
        "enum": [
          "INACTIVE",
          "0",
          "IDLE",
          "1",
          "HUMIDIFYING",
          "2",
          "DEHUMIDIFYING",
          "3"
        ]
      }
    },
    "enum_HumidifierDehumidifierTarget": {
      "propertyNames": {
        "enum": [
          "HUMIDIFIER_OR_DEHUMIDIFIER",
          "0",
          "HUMIDIFIER",
          "1",
          "DEHUMIDIFIER",
          "2"
        ]
      }
    },
    "enum_ImageRotation": {
      "propertyNames": {
        "enum": [
          "NO_ROTATION",
          "0",
          "ROTATED_90",
          "90",
          "ROTATED_180",
          "180",
          "ROTATED_270",
          "270"
        ]
      }
    },
    "enum_SiriInputType": {
      "propertyNames": {
        "enum": [
          "PUSH_BUTTON_TRIGGERED_APPLE_TV",
          "0"
        ]
      }
    },
    "enum_Co2NormalAbnormal": {
      "propertyNames": {
        "enum": [
          "CO2_LEVELS_NORMAL",
          "0",
          "CO2_LEVELS_ABNORMAL",
          "1"
        ]
      }
    },
    "enum_TrueFalse": {
      "propertyNames": {
        "enum": [
          "true",
          "1",
          "false",
          "0",
          "permadm",
          "permadm1",
          "permadm2",
          "permadm3",
          "none"
        ]
      }
    },
    "enum_GenericMap": {
      "type": "object",
      "additionalProperties": {
        "type": [
          "string",
          "boolean",
          "number",
          "integer",
          "object"
        ]
      }
    }
  },
  "type": "object",
  "properties": {
    "name": {
      "type": "string"
    },
    "manufacturer": {
      "type": "string",
      "description": "Manufacturer"
    },
    "model": {
      "type": "string",
      "description": "Model"
    },
    "manufacturerId": {
      "type": "string",
      "description": "Manufacturer ID"
    },
    "modelId": {
      "type": "string",
      "description": "Model ID"
    },
    "catalogId": {
      "type": "integer",
      "description": "Catalog ID"
    },
    "issue": {
      "type": "string",
      "description": "Issue"
    },
    "status": {
      "type": "string",
      "description": "Status"
    },
    "room": {
      "type": "string"
    },
    "visible": {
      "type": "boolean"
    },
    "powerMode": {
      "type": "string",
      "enum": [
        "POWER",
        "BATTERY",
        "BATTERY_RECEIVER"
      ]
    },
    "minRevision": {
      "type": "integer"
    },
    "maxRevision": {
      "type": "integer"
    },
    "description": {
      "type": "string"
    },
    "comment": {
      "type": "string"
    },
    "otaSupport": {
      "type": "boolean"
    },
    "otaReInitAfterUpdate": {
      "type": "boolean"
    },
    "imageType": {
      "type": "integer"
    },
    "date": {
      "type": "string"
    },
    "optional": {
      "$ref": "#/definitions/optional"
    },
    "overview": {
      "type": "string"
    },
    "url": {
      "type": "string"
    },
    "ali": {
      "type": "string"
    },
    "ali2": {
      "type": "string"
    },
    "TODO": {
      "type": "string"
    },
    "template": {
      "type": [
        "array"
      ],
      "description": "Template",
      "items": {
        "type": "string"
      }
    },
    "init": {
      "type": "array",
      "description": "Init",
      "items": {
        "type": "object",
        "properties": {
          "modelId": {
            "type": "object",
            "description": "for_modbus",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "String",
                  "Integer"
                ]
              },
              "address": {
                "type": "integer",
                "minimum": 0,
                "maximum": 65535
              },
              "function": {
                "type": "string",
                "enum": [
                  "Holding",
                  "Coil",
                  "Input"
                ]
              },
              "length": {
                "type": "integer",
                "minimum": 1,
                "maximum": 125
              }
            },
            "additionalProperties": false
          },
          "firmware": {
            "type": "object",
            "description": "for_modbus",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "String",
                  "Integer"
                ]
              },
              "address": {
                "type": "integer",
                "minimum": 0,
                "maximum": 65535
              },
              "function": {
                "type": "string",
                "enum": [
                  "Holding",
                  "Input"
                ]
              },
              "length": {
                "type": "integer",
                "minimum": 1,
                "maximum": 125
              }
            },
            "additionalProperties": false
          },
          "link": {
            "type": "array",
            "description": "for_zigbee",
            "minItems": 1,
            "items": {
              "type": "object",
              "properties": {
                "endpoint": {
                  "type": "integer",
                  "minimum": 1,
                  "maximum": 255
                },
                "cluster": {
                  "type": "string",
                  "pattern": "^[0-9A-Fa-f]{3,4}_[A-Za-z0-9_.-]+$"
                },
                "output": {
                  "type": "boolean"
                },
                "command": {
                  "type": "string"
                },
                "scale": {
                  "type": "number"
                },
                "attribute": {
                  "type": [
                    "string",
                    "array"
                  ],
                  "items": {
                    "type": "string",
                    "pattern": "^[0-9A-Fa-f]{3,4}_[A-Za-z0-9_.-]+$"
                  }
                },
                "manufacturerCode": {
                  "type": "integer",
                  "minimum": 0,
                  "maximum": 65535
                }
              },
              "additionalProperties": false
            }
          },
          "report": {
            "type": [
              "boolean",
              "integer",
              "object"
            ],
            "description": "for_zigbee",
            "properties": {
              "min": {
                "type": "integer"
              },
              "max": {
                "type": "integer"
              },
              "change": {
                "type": "number"
              }
            },
            "additionalProperties": false
          },
          "bind": {
            "type": "boolean",
            "default": true,
            "description": "for_zigbee"
          },
          "bindGroup": {
            "type": "boolean",
            "default": true,
            "description": "for_zigbee"
          },
          "init": {
            "type": "boolean",
            "description": "for_zigbee"
          },
          "name": {
            "type": "string",
            "description": "for_zigbee"
          },
          "nodes": {
            "type": "integer",
            "description": "for_zwave",
            "minimum": 1,
            "maximum": 232
          },
          "version": {
            "type": "string",
            "description": "for_zwave"
          },
          "statusUnavailable": {
            "default": true,
            "type": "boolean",
            "description": "for_zigbee"
          },
          "otaVersionFromApplicationVersion": {
            "default": true,
            "type": "boolean",
            "description": "for_zigbee"
          },
          "id": {
            "type": "number",
            "description": "for_zigbee",
            "minimum": 0
          },
          "association": {
            "type": "string",
            "description": "for_zigbee"
          },
          "commands": {
            "type": "array",
            "description": "for_zigbee",
            "items": {
              "type": "string",
              "enum": [
                "Alarm",
                "Basic",
                "Battery",
                "CentralScene",
                "Meter",
                "SensorAlarm",
                "SensorBinary",
                "SensorMultiLevel",
                "SwitchMultiLevel",
                "SwitchColor",
                "SwitchBinary"
              ]
            },
            "additionalItems": false
          },
          "visible": {
            "description": "for_zigbee",
            "type": "boolean"
          },
          "description": {
            "description": "for_zigbee",
            "type": "string"
          },
          "controller": {
            "description": "for_zwave",
            "type": "boolean"
          },
          "overview": {
            "description": "for_zwave",
            "type": "string"
          },
          "optional": {
            "description": "for_zigbee",
            "type": "boolean"
          },
          "type": {
            "description": "for_xiaomi,for_zwave",
            "type": "string",
            "enum": [
              "MaxReadLimit",
              "CustomReadPriority",
              "String"
            ]
          },
          "value": {
            "description": "for_xiaomi,for_zwave",
            "type": [
              "integer",
              "string"
            ]
          },
          "method": {
            "description": "for_xiaomi",
            "type": "string"
          },
          "params": {
            "description": "for_xiaomi",
            "type": "string"
          },
          "tuya": {
            "description": "for_xiaomi",
            "type": "string"
          },
          "zcl": {
            "description": "for_xiaomi",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "endpoint": {
                  "type": "integer",
                  "minimum": 1,
                  "maximum": 255
                },
                "cluster": {
                  "type": "string",
                  "pattern": "^[0-9A-Fa-f]{3,4}_[A-Za-z0-9_.-]+$"
                },
                "attribute": {
                  "type": "string",
                  "pattern": "^[0-9A-Fa-f]{3,4}_[A-Za-z0-9_.-]+$|[0-9A-Fa-f]{1,4}.[0-9A-Fa-f]{1,4}.[0-9A-Fa-f]{1,4}_[A-Za-z0-9_.-]+$"
                },
                "scale": {
                  "type": "number"
                },
                "manufacturerCode": {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 65535
                },
                "output": {
                  "type": "boolean"
                },
                "zclDataType": {
                  "type": "string",
                  "enum": [
                    "ENUMERATION_8_BIT",
                    "SIGNED_8_BIT_INTEGER",
                    "UNSIGNED_8_BIT_INTEGER",
                    "ENUMERATION_16_BIT",
                    "SIGNED_16_BIT_INTEGER",
                    "UNSIGNED_16_BIT_INTEGER",
                    "ENUMERATION_32_BIT",
                    "SIGNED_32_BIT_INTEGER",
                    "UNSIGNED_32_BIT_INTEGER",
                    "UNSIGNED_48_BIT_INTEGER",
                    "CHARACTER_STRING",
                    "BOOLEAN",
                    "FLOAT_32_BIT",
                    "AQARA_UNSIGNED_8_BIT_INTEGER",
                    "AQARA_UNSIGNED_16_BIT_INTEGER",
                    "AQARA_UNSIGNED_32_BIT_INTEGER",
                    "AQARA_OCTET_STRING",
                    "TUYA_BOOLEAN",
                    "TUYA_32_BIT_INTEGER",
                    "BITMAP_16_BIT"
                  ]
                }
              },
              "additionalProperties": false
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      }
    },
    "services": {
      "type": "array",
      "description": "Services",
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name"
          },
          "version": {
            "type": "string"
          },
          "visible": {
            "type": "boolean",
            "default": false,
            "description": "Visible"
          },
          "endpoint": {
            "type": "integer",
            "default": 1,
            "description": "Endpoint",
            "minimum": 1
          },
          "optional": {
            "$ref": "#/definitions/optional"
          },
          "logics": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/logics"
            }
          },
          "linkedServices": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "type": "string",
            "enum": [
              "AccessoryInformation",
              "AirPurifier",
              "AirQualitySensor",
              "AudioStreamManagement",
              "BatteryService",
              "CameraRTPStreamManagement",
              "CarbonDioxideSensor",
              "CarbonMonoxideSensor",
              "ContactSensor",
              "DataStreamTransportManagement",
              "Door",
              "Doorbell",
              "FanBasic",
              "Fan",
              "Faucet",
              "FilterMaintenance",
              "GarageDoorOpener",
              "HAPProtocolInformation",
              "HeaterCooler",
              "HumidifierDehumidifier",
              "HumiditySensor",
              "IrrigationSystem",
              "LeakSensor",
              "Lightbulb",
              "LightSensor",
              "LockManagement",
              "LockMechanism",
              "Microphone",
              "MotionSensor",
              "OccupancySensor",
              "Outlet",
              "SecuritySystem",
              "ServiceLabel",
              "Siri",
              "Slat",
              "SmokeSensor",
              "Speaker",
              "StatelessProgrammableSwitch",
              "Switch",
              "TargetControl",
              "TargetControlManagement",
              "TemperatureSensor",
              "Thermostat",
              "Valve",
              "Window",
              "WindowCovering",
              "CloudRelay",
              "TransferTransportManagement",
              "CameraRecordingManagement",
              "WiFiRouter",
              "CameraOperatingMode",
              "PowerManagement",
              "WiFiTransport",
              "WiFiSatellite",
              "Diagnostics",
              "ThreadTransport",
              "Television",
              "InputSource",
              "TelevisionSpeaker",
              "AccessControl",
              "CameraControl",
              "C_AccessoryExtInfo",
              "C_AtmosphericPressureSensor",
              "C_NoiseSensor",
              "C_VoltMeter",
              "C_AmpereMeter",
              "C_WattMeter",
              "C_VoltAmpereMeter",
              "C_KiloWattHourMeter",
              "C_KiloVoltAmpereHourMeter",
              "C_UltravioletSensor",
              "C_PulseMeter",
              "C_WaterMeter",
              "C_VoltPeakMeter",
              "C_AngleMeter",
              "C_VoltAngleMeter",
              "C_PhaseAngleMeter",
              "C_VoltAmpereReactiveMeter",
              "C_KiloVoltAmpereReactiveHourMeter",
              "C_PowerFactorMeter",
              "C_FrequencyMeter",
              "C_AmperePeakMeter",
              "C_Repeater",
              "C_Option",
              "C_GasSensor",
              "C_DistanceSensor",
              "C_TiltAngle",
              "C_Massage",
              "C_PetFeeder",
              "C_GasMeter",
              "C_HeatMeter",
              "C_Transceiver",
              "C_TemperatureControl",
              "GenericService"
            ]
          },
          "characteristics": {
            "type": "array",
            "description": "Characteristics",
            "minItems": 1,
            "items": {
              "type": "object",
              "allOf": [
                {
                  "$ref": "#/definitions/characteristic"
                },
                {
                  "description": "C_FanSpeed",
                  "if": {
                    "properties": {
                      "type": {
                        "const": "C_FanSpeed"
                      }
                    }
                  },
                  "then": {
                    "properties": {
                      "link": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "map": {
                              "type": "object",
                              "$ref": "#/definitions/enum_CFanSpeed"
                            },
                            "outMap": {
                              "type": "object",
                              "$ref": "#/definitions/enum_CFanSpeed"
                            }
                          }
                        }
                      }
                    }
                  },
                  "else": {
                    "properties": {
                      "link": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "map": {
                              "type": "object",
                              "additionalProperties": {
                                "type": [
                                  "string",
                                  "boolean",
                                  "number",
                                  "integer",
                                  "object"
                                ]
                              }
                            },
                            "outMap": {
                              "type": "object",
                              "additionalProperties": {
                                "type": [
                                  "string",
                                  "boolean",
                                  "number",
                                  "integer",
                                  "object"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "description": "Active",
                  "if": {
                    "properties": {
                      "type": {
                        "const": "Active"
                      }
                    }
                  },
                  "then": {
                    "properties": {
                      "link": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "map": {
                              "type": "object",
                              "$ref": "#/definitions/enum_InactiveActive"
                            },
                            "outMap": {
                              "type": "object",
                              "$ref": "#/definitions/enum_InactiveActive"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "description": "On",
                  "if": {
                    "properties": {
                      "type": {
                        "const": "On"
                      }
                    }
                  },
                  "then": {
                    "properties": {
                      "link": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "map": {
                              "type": "object",
                              "$ref": "#/definitions/enum_TrueFalse"
                            },
                            "outMap": {
                              "type": "object",
                              "$ref": "#/definitions/enum_TrueFalse"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "description": "SiriInputType",
                  "if": {
                    "properties": {
                      "type": {
                        "const": "SiriInputType"
                      }
                    }
                  },
                  "then": {
                    "properties": {
                      "link": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "map": {
                              "type": "object",
                              "$ref": "#/definitions/enum_SiriInputType"
                            },
                            "outMap": {
                              "type": "object",
                              "$ref": "#/definitions/enum_SiriInputType"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "description": "WiFiSatelliteStatus",
                  "if": {
                    "properties": {
                      "type": {
                        "const": "WiFiSatelliteStatus"
                      }
                    }
                  },
                  "then": {
                    "properties": {
                      "link": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "map": {
                              "type": "object",
                              "$ref": "#/definitions/enum_UnknownConnectedNotConnected"
                            },
                            "outMap": {
                              "type": "object",
                              "$ref": "#/definitions/enum_UnknownConnectedNotConnected"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "description": "ManagedNetworkEnable",
                  "if": {
                    "properties": {
                      "type": {
                        "const": "ManagedNetworkEnable"
                      }
                    }
                  },
                  "then": {
                    "properties": {
                      "link": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "map": {
                              "type": "object",
                              "$ref": "#/definitions/enum_DisableEnable"
                            },
                            "outMap": {
                              "type": "object",
                              "$ref": "#/definitions/enum_DisableEnable"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "description": "RouterStatus",
                  "if": {
                    "properties": {
                      "type": {
                        "const": "RouterStatus"
                      }
                    }
                  },
                  "then": {
                    "properties": {
                      "link": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "map": {
                              "type": "object",
                              "$ref": "#/definitions/enum_ReadyNotReady"
                            },
                            "outMap": {
                              "type": "object",
                              "$ref": "#/definitions/enum_ReadyNotReady"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "description": "ChargingState",
                  "if": {
                    "properties": {
                      "type": {
                        "const": "ChargingState"
                      }
                    }
                  },
                  "then": {
                    "properties": {
                      "link": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "map": {
                              "type": "object",
                              "$ref": "#/definitions/enum_NotChargingChargingNotChargeable"
                            },
                            "outMap": {
                              "type": "object",
                              "$ref": "#/definitions/enum_NotChargingChargingNotChargeable"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "description": "StatusLowBattery",
                  "if": {
                    "properties": {
                      "type": {
                        "const": "StatusLowBattery"
                      }
                    }
                  },
                  "then": {
                    "properties": {
                      "link": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "map": {
                              "type": "object",
                              "$ref": "#/definitions/enum_BatteryNormalLow"
                            },
                            "outMap": {
                              "type": "object",
                              "$ref": "#/definitions/enum_BatteryNormalLow"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "description": "CurrentFanState",
                  "if": {
                    "properties": {
                      "type": {
                        "const": "CurrentFanState"
                      }
                    }
                  },
                  "then": {
                    "properties": {
                      "link": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "map": {
                              "type": "object",
                              "$ref": "#/definitions/enum_InactiveIdleBlowing"
                            },
                            "outMap": {
                              "type": "object",
                              "$ref": "#/definitions/enum_InactiveIdleBlowing"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "description": "TargetFanState",
                  "if": {
                    "properties": {
                      "type": {
                        "const": "TargetFanState"
                      }
                    }
                  },
                  "then": {
                    "properties": {
                      "link": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "map": {
                              "type": "object",
                              "$ref": "#/definitions/enum_ManualAuto"
                            },
                            "outMap": {
                              "type": "object",
                              "$ref": "#/definitions/enum_ManualAuto"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "description": "RotationDirection",
                  "if": {
                    "properties": {
                      "type": {
                        "const": "RotationDirection"
                      }
                    }
                  },
                  "then": {
                    "properties": {
                      "link": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "map": {
                              "type": "object",
                              "$ref": "#/definitions/enum_ClockwiseCounter"
                            },
                            "outMap": {
                              "type": "object",
                              "$ref": "#/definitions/enum_ClockwiseCounter"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "description": "SwingMode",
                  "if": {
                    "properties": {
                      "type": {
                        "const": "SwingMode"
                      }
                    }
                  },
                  "then": {
                    "properties": {
                      "link": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "map": {
                              "type": "object",
                              "$ref": "#/definitions/enum_SwingModes"
                            },
                            "outMap": {
                              "type": "object",
                              "$ref": "#/definitions/enum_SwingModes"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "description": "LockPhysicalControls",
                  "if": {
                    "properties": {
                      "type": {
                        "const": "LockPhysicalControls"
                      }
                    }
                  },
                  "then": {
                    "properties": {
                      "link": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "map": {
                              "type": "object",
                              "$ref": "#/definitions/enum_ControlLock"
                            },
                            "outMap": {
                              "type": "object",
                              "$ref": "#/definitions/enum_ControlLock"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "description": "RotationDirection",
                  "if": {
                    "properties": {
                      "type": {
                        "const": "RotationDirection"
                      }
                    }
                  },
                  "then": {
                    "properties": {
                      "link": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "map": {
                              "type": "object",
                              "$ref": "#/definitions/enum_ClockwiseCounter"
                            },
                            "outMap": {
                              "type": "object",
                              "$ref": "#/definitions/enum_ClockwiseCounter"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "description": "StatusFault",
                  "if": {
                    "properties": {
                      "type": {
                        "const": "StatusFault"
                      }
                    }
                  },
                  "then": {
                    "properties": {
                      "link": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "map": {
                              "type": "object",
                              "$ref": "#/definitions/enum_NoFaultGeneralFault"
                            },
                            "outMap": {
                              "type": "object",
                              "$ref": "#/definitions/enum_NoFaultGeneralFault"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "description": "CurrentDoorState",
                  "if": {
                    "properties": {
                      "type": {
                        "const": "CurrentDoorState"
                      }
                    }
                  },
                  "then": {
                    "properties": {
                      "link": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "map": {
                              "type": "object",
                              "$ref": "#/definitions/enum_DoorStates"
                            },
                            "outMap": {
                              "type": "object",
                              "$ref": "#/definitions/enum_DoorStates"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "description": "TargetDoorState",
                  "if": {
                    "properties": {
                      "type": {
                        "const": "TargetDoorState"
                      }
                    }
                  },
                  "then": {
                    "properties": {
                      "link": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "map": {
                              "type": "object",
                              "$ref": "#/definitions/enum_DoorTarget"
                            },
                            "outMap": {
                              "type": "object",
                              "$ref": "#/definitions/enum_DoorTarget"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "description": "LockCurrentState",
                  "if": {
                    "properties": {
                      "type": {
                        "const": "LockCurrentState"
                      }
                    }
                  },
                  "then": {
                    "properties": {
                      "link": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "map": {
                              "type": "object",
                              "$ref": "#/definitions/enum_LockStates"
                            },
                            "outMap": {
                              "type": "object",
                              "$ref": "#/definitions/enum_LockStates"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "description": "LockTargetState",
                  "if": {
                    "properties": {
                      "type": {
                        "const": "LockTargetState"
                      }
                    }
                  },
                  "then": {
                    "properties": {
                      "link": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "map": {
                              "type": "object",
                              "$ref": "#/definitions/enum_LockTarget"
                            },
                            "outMap": {
                              "type": "object",
                              "$ref": "#/definitions/enum_LockTarget"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "description": "StatusTampered",
                  "if": {
                    "properties": {
                      "type": {
                        "const": "StatusTampered"
                      }
                    }
                  },
                  "then": {
                    "properties": {
                      "link": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "map": {
                              "type": "object",
                              "$ref": "#/definitions/enum_NotTamperedTampered"
                            },
                            "outMap": {
                              "type": "object",
                              "$ref": "#/definitions/enum_NotTamperedTampered"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "description": "C_GasDetected",
                  "if": {
                    "properties": {
                      "type": {
                        "const": "C_GasDetected"
                      }
                    }
                  },
                  "then": {
                    "properties": {
                      "link": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "map": {
                              "type": "object",
                              "$ref": "#/definitions/enum_SmokeNotDetectedDetected"
                            },
                            "outMap": {
                              "type": "object",
                              "$ref": "#/definitions/enum_SmokeNotDetectedDetected"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "description": "C_GasType",
                  "if": {
                    "properties": {
                      "type": {
                        "const": "C_GasType"
                      }
                    }
                  },
                  "then": {
                    "properties": {
                      "link": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "map": {
                              "type": "object",
                              "$ref": "#/definitions/enum_GasTypes"
                            },
                            "outMap": {
                              "type": "object",
                              "$ref": "#/definitions/enum_GasTypes"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "description": "ContactSensorState",
                  "if": {
                    "properties": {
                      "type": {
                        "const": "ContactSensorState"
                      }
                    }
                  },
                  "then": {
                    "properties": {
                      "link": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "map": {
                              "type": "object",
                              "$ref": "#/definitions/enum_ContactDetectedNotDetected"
                            },
                            "outMap": {
                              "type": "object",
                              "$ref": "#/definitions/enum_ContactDetectedNotDetected"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "description": "AirQuality",
                  "if": {
                    "properties": {
                      "type": {
                        "const": "AirQuality"
                      }
                    }
                  },
                  "then": {
                    "properties": {
                      "link": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "map": {
                              "type": "object",
                              "$ref": "#/definitions/enum_AirQuality"
                            },
                            "outMap": {
                              "type": "object",
                              "$ref": "#/definitions/enum_AirQuality"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "description": "OccupancyDetected",
                  "if": {
                    "properties": {
                      "type": {
                        "const": "OccupancyDetected"
                      }
                    }
                  },
                  "then": {
                    "properties": {
                      "link": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "map": {
                              "type": "object",
                              "$ref": "#/definitions/enum_OccupancyNotDetectedDetected"
                            },
                            "outMap": {
                              "type": "object",
                              "$ref": "#/definitions/enum_OccupancyNotDetectedDetected"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "description": "LeakDetected",
                  "if": {
                    "properties": {
                      "type": {
                        "const": "LeakDetected"
                      }
                    }
                  },
                  "then": {
                    "properties": {
                      "link": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "map": {
                              "type": "object",
                              "$ref": "#/definitions/enum_LeakNotDetectedDetected"
                            },
                            "outMap": {
                              "type": "object",
                              "$ref": "#/definitions/enum_LeakNotDetectedDetected"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "description": "CarbonDioxideDetected",
                  "if": {
                    "properties": {
                      "type": {
                        "const": "CarbonDioxideDetected"
                      }
                    }
                  },
                  "then": {
                    "properties": {
                      "link": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "map": {
                              "type": "object",
                              "$ref": "#/definitions/enum_Co2NormalAbnormal"
                            },
                            "outMap": {
                              "type": "object",
                              "$ref": "#/definitions/enum_Co2NormalAbnormal"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "description": "C_NoiseDetected",
                  "if": {
                    "properties": {
                      "type": {
                        "const": "C_NoiseDetected"
                      }
                    }
                  },
                  "then": {
                    "properties": {
                      "link": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "map": {
                              "type": "object",
                              "$ref": "#/definitions/enum_NormalAbnormal"
                            },
                            "outMap": {
                              "type": "object",
                              "$ref": "#/definitions/enum_NormalAbnormal"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "description": "PositionState",
                  "if": {
                    "properties": {
                      "type": {
                        "const": "PositionState"
                      }
                    }
                  },
                  "then": {
                    "properties": {
                      "link": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "map": {
                              "type": "object",
                              "$ref": "#/definitions/enum_PositionStates"
                            },
                            "outMap": {
                              "type": "object",
                              "$ref": "#/definitions/enum_PositionStates"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "description": "CurrentSlatState",
                  "if": {
                    "properties": {
                      "type": {
                        "const": "CurrentSlatState"
                      }
                    }
                  },
                  "then": {
                    "properties": {
                      "link": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "map": {
                              "type": "object",
                              "$ref": "#/definitions/enum_SlatStates"
                            },
                            "outMap": {
                              "type": "object",
                              "$ref": "#/definitions/enum_SlatStates"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "description": "SlatType",
                  "if": {
                    "properties": {
                      "type": {
                        "const": "SlatType"
                      }
                    }
                  },
                  "then": {
                    "properties": {
                      "link": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "map": {
                              "type": "object",
                              "$ref": "#/definitions/enum_SlatTypes"
                            },
                            "outMap": {
                              "type": "object",
                              "$ref": "#/definitions/enum_SlatTypes"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "description": "ProgrammableSwitchEvent",
                  "if": {
                    "properties": {
                      "type": {
                        "const": "ProgrammableSwitchEvent"
                      }
                    }
                  },
                  "then": {
                    "properties": {
                      "link": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "map": {
                              "type": "object",
                              "$ref": "#/definitions/enum_ProgrammableSwitchEvent"
                            },
                            "outMap": {
                              "type": "object",
                              "$ref": "#/definitions/enum_SwitchEvents"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "description": "InUse",
                  "if": {
                    "properties": {
                      "type": {
                        "const": "InUse"
                      }
                    }
                  },
                  "then": {
                    "properties": {
                      "link": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "map": {
                              "type": "object",
                              "$ref": "#/definitions/enum_InUseNotInUse"
                            },
                            "outMap": {
                              "type": "object",
                              "$ref": "#/definitions/enum_InUseNotInUse"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "description": "ValveType",
                  "if": {
                    "properties": {
                      "type": {
                        "const": "ValveType"
                      }
                    }
                  },
                  "then": {
                    "properties": {
                      "link": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "map": {
                              "type": "object",
                              "$ref": "#/definitions/enum_ValveTypes"
                            },
                            "outMap": {
                              "type": "object",
                              "$ref": "#/definitions/enum_ValveTypes"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "description": "IsConfigured",
                  "if": {
                    "properties": {
                      "type": {
                        "const": "IsConfigured"
                      }
                    }
                  },
                  "then": {
                    "properties": {
                      "link": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "map": {
                              "type": "object",
                              "$ref": "#/definitions/enum_NotConfiguredConfigured"
                            },
                            "outMap": {
                              "type": "object",
                              "$ref": "#/definitions/enum_NotConfiguredConfigured"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "description": "CurrentHeaterCoolerState",
                  "if": {
                    "properties": {
                      "type": {
                        "const": "CurrentHeaterCoolerState"
                      }
                    }
                  },
                  "then": {
                    "properties": {
                      "link": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "map": {
                              "type": "object",
                              "$ref": "#/definitions/enum_HeaterCoolerStates"
                            },
                            "outMap": {
                              "type": "object",
                              "$ref": "#/definitions/enum_HeaterCoolerStates"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "description": "TargetHeaterCoolerState",
                  "if": {
                    "properties": {
                      "type": {
                        "const": "TargetHeaterCoolerState"
                      }
                    }
                  },
                  "then": {
                    "properties": {
                      "link": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "map": {
                              "type": "object",
                              "$ref": "#/definitions/enum_HeaterCoolerTarget"
                            },
                            "outMap": {
                              "type": "object",
                              "$ref": "#/definitions/enum_HeaterCoolerTarget"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "description": "TemperatureDisplayUnits",
                  "if": {
                    "properties": {
                      "type": {
                        "const": "TemperatureDisplayUnits"
                      }
                    }
                  },
                  "then": {
                    "properties": {
                      "link": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "map": {
                              "type": "object",
                              "$ref": "#/definitions/enum_TemperatureUnits"
                            },
                            "outMap": {
                              "type": "object",
                              "$ref": "#/definitions/enum_TemperatureUnits"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "description": "ServiceLabelNamespace",
                  "if": {
                    "properties": {
                      "type": {
                        "const": "ServiceLabelNamespace"
                      }
                    }
                  },
                  "then": {
                    "properties": {
                      "link": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "map": {
                              "type": "object",
                              "$ref": "#/definitions/enum_ServiceLabelNamespace"
                            },
                            "outMap": {
                              "type": "object",
                              "$ref": "#/definitions/enum_ServiceLabelNamespace"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "description": "FilterChangeIndication",
                  "if": {
                    "properties": {
                      "type": {
                        "const": "FilterChangeIndication"
                      }
                    }
                  },
                  "then": {
                    "properties": {
                      "link": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "map": {
                              "type": "object",
                              "$ref": "#/definitions/enum_FilterChange"
                            },
                            "outMap": {
                              "type": "object",
                              "$ref": "#/definitions/enum_FilterChange"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "description": "C_TargetPositionState",
                  "if": {
                    "properties": {
                      "type": {
                        "const": "C_TargetPositionState"
                      }
                    }
                  },
                  "then": {
                    "properties": {
                      "link": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "map": {
                              "type": "object",
                              "$ref": "#/definitions/enum_TargetPositionState"
                            },
                            "outMap": {
                              "type": "object",
                              "$ref": "#/definitions/enum_TargetPositionState"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "description": "CurrentAirPurifierState",
                  "if": {
                    "properties": {
                      "type": {
                        "const": "CurrentAirPurifierState"
                      }
                    }
                  },
                  "then": {
                    "properties": {
                      "link": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "map": {
                              "type": "object",
                              "$ref": "#/definitions/enum_AirPurifierStates"
                            },
                            "outMap": {
                              "type": "object",
                              "$ref": "#/definitions/enum_AirPurifierStates"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "description": "TargetAirPurifierState",
                  "if": {
                    "properties": {
                      "type": {
                        "const": "TargetAirPurifierState"
                      }
                    }
                  },
                  "then": {
                    "properties": {
                      "link": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "map": {
                              "type": "object",
                              "$ref": "#/definitions/enum_ManualAuto"
                            },
                            "outMap": {
                              "type": "object",
                              "$ref": "#/definitions/enum_ManualAuto"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "description": "EventSnapshotsActive",
                  "if": {
                    "properties": {
                      "type": {
                        "const": "EventSnapshotsActive"
                      }
                    }
                  },
                  "then": {
                    "properties": {
                      "link": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "map": {
                              "type": "object",
                              "$ref": "#/definitions/enum_DisableEnable"
                            },
                            "outMap": {
                              "type": "object",
                              "$ref": "#/definitions/enum_DisableEnable"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "description": "HomeKitCameraActive",
                  "if": {
                    "properties": {
                      "type": {
                        "const": "HomeKitCameraActive"
                      }
                    }
                  },
                  "then": {
                    "properties": {
                      "link": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "map": {
                              "type": "object",
                              "$ref": "#/definitions/enum_OffOn"
                            },
                            "outMap": {
                              "type": "object",
                              "$ref": "#/definitions/enum_OffOn"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "description": "CameraOperatingModeIndicator",
                  "if": {
                    "properties": {
                      "type": {
                        "const": "CameraOperatingModeIndicator"
                      }
                    }
                  },
                  "then": {
                    "properties": {
                      "link": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "map": {
                              "type": "object",
                              "$ref": "#/definitions/enum_DisableEnable"
                            },
                            "outMap": {
                              "type": "object",
                              "$ref": "#/definitions/enum_DisableEnable"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "description": "ManuallyDisabled",
                  "if": {
                    "properties": {
                      "type": {
                        "const": "ManuallyDisabled"
                      }
                    }
                  },
                  "then": {
                    "properties": {
                      "link": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "map": {
                              "type": "object",
                              "$ref": "#/definitions/enum_DisableEnable"
                            },
                            "outMap": {
                              "type": "object",
                              "$ref": "#/definitions/enum_DisableEnable"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "description": "PeriodicSnapshotsActive",
                  "if": {
                    "properties": {
                      "type": {
                        "const": "PeriodicSnapshotsActive"
                      }
                    }
                  },
                  "then": {
                    "properties": {
                      "link": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "map": {
                              "type": "object",
                              "$ref": "#/definitions/enum_DisableEnable"
                            },
                            "outMap": {
                              "type": "object",
                              "$ref": "#/definitions/enum_DisableEnable"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "description": "ThirdPartyCameraActive",
                  "if": {
                    "properties": {
                      "type": {
                        "const": "ThirdPartyCameraActive"
                      }
                    }
                  },
                  "then": {
                    "properties": {
                      "link": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "map": {
                              "type": "object",
                              "$ref": "#/definitions/enum_OffOn"
                            },
                            "outMap": {
                              "type": "object",
                              "$ref": "#/definitions/enum_OffOn"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "description": "SecuritySystemCurrentState",
                  "if": {
                    "properties": {
                      "type": {
                        "const": "SecuritySystemCurrentState"
                      }
                    }
                  },
                  "then": {
                    "properties": {
                      "link": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "map": {
                              "type": "object",
                              "$ref": "#/definitions/enum_SecurityCurrent"
                            },
                            "outMap": {
                              "type": "object",
                              "$ref": "#/definitions/enum_SecurityCurrent"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "description": "SecuritySystemTargetState",
                  "if": {
                    "properties": {
                      "type": {
                        "const": "SecuritySystemTargetState"
                      }
                    }
                  },
                  "then": {
                    "properties": {
                      "link": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "map": {
                              "type": "object",
                              "$ref": "#/definitions/enum_SecurityTarget"
                            },
                            "outMap": {
                              "type": "object",
                              "$ref": "#/definitions/enum_SecurityTarget"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "description": "ProgramMode",
                  "if": {
                    "properties": {
                      "type": {
                        "const": "ProgramMode"
                      }
                    }
                  },
                  "then": {
                    "properties": {
                      "link": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "map": {
                              "type": "object",
                              "$ref": "#/definitions/enum_ProgramMode"
                            },
                            "outMap": {
                              "type": "object",
                              "$ref": "#/definitions/enum_ProgramMode"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "description": "VolumeControlType",
                  "if": {
                    "properties": {
                      "type": {
                        "const": "VolumeControlType"
                      }
                    }
                  },
                  "then": {
                    "properties": {
                      "link": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "map": {
                              "type": "object",
                              "$ref": "#/definitions/enum_VolumeControlType"
                            },
                            "outMap": {
                              "type": "object",
                              "$ref": "#/definitions/enum_VolumeControlType"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "description": "VolumeSelector",
                  "if": {
                    "properties": {
                      "type": {
                        "const": "VolumeSelector"
                      }
                    }
                  },
                  "then": {
                    "properties": {
                      "link": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "map": {
                              "type": "object",
                              "$ref": "#/definitions/enum_VolumeSelector"
                            },
                            "outMap": {
                              "type": "object",
                              "$ref": "#/definitions/enum_VolumeSelector"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "description": "RemoteKey",
                  "if": {
                    "properties": {
                      "type": {
                        "const": "RemoteKey"
                      }
                    }
                  },
                  "then": {
                    "properties": {
                      "link": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "map": {
                              "type": "object",
                              "$ref": "#/definitions/enum_RemoteKeys"
                            },
                            "outMap": {
                              "type": "object",
                              "$ref": "#/definitions/enum_RemoteKeys"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "description": "SleepDiscoveryMode",
                  "if": {
                    "properties": {
                      "type": {
                        "const": "SleepDiscoveryMode"
                      }
                    }
                  },
                  "then": {
                    "properties": {
                      "link": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "map": {
                              "type": "object",
                              "$ref": "#/definitions/enum_SleepDiscovery"
                            },
                            "outMap": {
                              "type": "object",
                              "$ref": "#/definitions/enum_SleepDiscovery"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "description": "ClosedCaptions",
                  "if": {
                    "properties": {
                      "type": {
                        "const": "ClosedCaptions"
                      }
                    }
                  },
                  "then": {
                    "properties": {
                      "link": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "map": {
                              "type": "object",
                              "$ref": "#/definitions/enum_DisabledEnabled"
                            },
                            "outMap": {
                              "type": "object",
                              "$ref": "#/definitions/enum_DisabledEnabled"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "description": "CurrentMediaState",
                  "if": {
                    "properties": {
                      "type": {
                        "const": "CurrentMediaState"
                      }
                    }
                  },
                  "then": {
                    "properties": {
                      "link": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "map": {
                              "type": "object",
                              "$ref": "#/definitions/enum_MediaStates"
                            },
                            "outMap": {
                              "type": "object",
                              "$ref": "#/definitions/enum_MediaStates"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "description": "TargetMediaState",
                  "if": {
                    "properties": {
                      "type": {
                        "const": "TargetMediaState"
                      }
                    }
                  },
                  "then": {
                    "properties": {
                      "link": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "map": {
                              "type": "object",
                              "$ref": "#/definitions/enum_MediaTarget"
                            },
                            "outMap": {
                              "type": "object",
                              "$ref": "#/definitions/enum_MediaTarget"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "description": "PictureMode",
                  "if": {
                    "properties": {
                      "type": {
                        "const": "PictureMode"
                      }
                    }
                  },
                  "then": {
                    "properties": {
                      "link": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "map": {
                              "type": "object",
                              "$ref": "#/definitions/enum_PictureModes"
                            },
                            "outMap": {
                              "type": "object",
                              "$ref": "#/definitions/enum_PictureModes"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "description": "PowerModeSelection",
                  "if": {
                    "properties": {
                      "type": {
                        "const": "PowerModeSelection"
                      }
                    }
                  },
                  "then": {
                    "properties": {
                      "link": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "map": {
                              "type": "object",
                              "$ref": "#/definitions/enum_ShowHide"
                            },
                            "outMap": {
                              "type": "object",
                              "$ref": "#/definitions/enum_ShowHide"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "description": "CurrentHeatingCoolingState",
                  "if": {
                    "properties": {
                      "type": {
                        "const": "CurrentHeatingCoolingState"
                      }
                    }
                  },
                  "then": {
                    "properties": {
                      "link": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "map": {
                              "type": "object",
                              "$ref": "#/definitions/enum_HeatingCooling"
                            },
                            "outMap": {
                              "type": "object",
                              "$ref": "#/definitions/enum_HeatingCooling"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "description": "TargetHeatingCoolingState",
                  "if": {
                    "properties": {
                      "type": {
                        "const": "TargetHeatingCoolingState"
                      }
                    }
                  },
                  "then": {
                    "properties": {
                      "link": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "map": {
                              "type": "object",
                              "$ref": "#/definitions/enum_TargetHeatingCoolingState"
                            },
                            "outMap": {
                              "type": "object",
                              "$ref": "#/definitions/enum_TargetHeatingCoolingState"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "description": "CurrentHumidifierDehumidifierState",
                  "if": {
                    "properties": {
                      "type": {
                        "const": "CurrentHumidifierDehumidifierState"
                      }
                    }
                  },
                  "then": {
                    "properties": {
                      "link": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "map": {
                              "type": "object",
                              "$ref": "#/definitions/enum_HumidifierDehumidifier"
                            },
                            "outMap": {
                              "type": "object",
                              "$ref": "#/definitions/enum_HumidifierDehumidifier"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "description": "TargetHumidifierDehumidifierState",
                  "if": {
                    "properties": {
                      "type": {
                        "const": "TargetHumidifierDehumidifierState"
                      }
                    }
                  },
                  "then": {
                    "properties": {
                      "link": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "map": {
                              "type": "object",
                              "$ref": "#/definitions/enum_HumidifierDehumidifierTarget"
                            },
                            "outMap": {
                              "type": "object",
                              "$ref": "#/definitions/enum_HumidifierDehumidifierTarget"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "description": "LockLastKnownAction",
                  "if": {
                    "properties": {
                      "type": {
                        "const": "LockLastKnownAction"
                      }
                    }
                  },
                  "then": {
                    "properties": {
                      "link": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "map": {
                              "type": "object",
                              "$ref": "#/definitions/enum_LockLastKnownAction"
                            },
                            "outMap": {
                              "type": "object",
                              "$ref": "#/definitions/enum_LockLastKnownAction"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "description": "RecordingAudioActive",
                  "if": {
                    "properties": {
                      "type": {
                        "const": "RecordingAudioActive"
                      }
                    }
                  },
                  "then": {
                    "properties": {
                      "link": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "map": {
                              "type": "object",
                              "$ref": "#/definitions/enum_DisableEnable"
                            },
                            "outMap": {
                              "type": "object",
                              "$ref": "#/definitions/enum_DisableEnable"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "description": "ImageRotation",
                  "if": {
                    "properties": {
                      "type": {
                        "const": "ImageRotation"
                      }
                    }
                  },
                  "then": {
                    "properties": {
                      "link": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "map": {
                              "type": "object",
                              "$ref": "#/definitions/enum_ImageRotation"
                            },
                            "outMap": {
                              "type": "object",
                              "$ref": "#/definitions/enum_ImageRotation"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "option": {
            "type": "boolean"
          }
        },
        "additionalProperties": false,
        "additionalItems": false,
        "required": [
          "type"
        ],
        "dependencies": {
          "characteristics": {
            "anyOf": [
              {
                "oneOf": [
                  {
                    "not": {
                      "properties": {
                        "characteristics": {
                          "contains": {
                            "properties": {
                              "type": {
                                "const": "Hue"
                              }
                            },
                            "required": [
                              "type"
                            ]
                          }
                        }
                      }
                    }
                  },
                  {
                    "properties": {
                      "characteristics": {
                        "contains": {
                          "properties": {
                            "type": {
                              "const": "Saturation"
                            }
                          },
                          "required": [
                            "type"
                          ]
                        }
                      }
                    }
                  }
                ]
              },
              {
                "oneOf": [
                  {
                    "not": {
                      "properties": {
                        "characteristics": {
                          "contains": {
                            "properties": {
                              "type": {
                                "const": "Saturation"
                              }
                            },
                            "required": [
                              "type"
                            ]
                          }
                        }
                      }
                    }
                  },
                  {
                    "properties": {
                      "characteristics": {
                        "contains": {
                          "properties": {
                            "type": {
                              "const": "Hue"
                            }
                          },
                          "required": [
                            "type"
                          ]
                        }
                      }
                    }
                  }
                ]
              }
            ]
          }
        }
      }
    },
    "options": {
      "type": "array",
      "description": "Options",
      "items": {
        "$ref": "#/definitions/characteristic"
      }
    }
  },
  "dependencies": {
    "manufacturer": {
      "required": [
        "modelId"
      ]
    }
  },
  "additionalProperties": false
}